//
// This file is auto-generated by SchemaGenerator
//
package io.github.fileanalysissuite.adaptersdk.schema;

import io.github.fileanalysissuite.adaptersdk.schema.builders.JsonBuilder;
import io.github.fileanalysissuite.adaptersdk.schema.builders.SchemaObjectBuilder;
import java.lang.Boolean;
import java.lang.Integer;
import java.lang.String;
import java.time.Instant;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;
import java.util.function.Consumer;
import java.util.stream.Collectors;
import java.util.stream.Stream;

public final class AdapterSdkSchemaObjectBuilder {
  private final SchemaObjectBuilder schemaObjectBuilder;

  private boolean isFileNameSet;

  private boolean isMimetypeSet;

  private boolean isTitleSet;

  public AdapterSdkSchemaObjectBuilder(final SchemaObjectBuilder schemaObjectBuilder) {
    this.schemaObjectBuilder = schemaObjectBuilder;
  }

  public void setAccounts(final Consumer<AccountsObjectBuilder> director) {
    final AccountsObjectBuilder accountsBuilder = new AccountsObjectBuilder();
    director.accept(accountsBuilder);
    schemaObjectBuilder.setJsonFieldValue(
      AdapterSdkSchema.ACCOUNTS,
      jsonBuilder -> {
        accountsBuilder.build(jsonBuilder);
    }
    );
  }

  public void setAccounts(final Stream<Consumer<AccountsObjectBuilder>> directors) {
    schemaObjectBuilder.setJsonFieldValue(
      AdapterSdkSchema.ACCOUNTS,
      directors.<Consumer<JsonBuilder>>map(director -> {
        final AccountsObjectBuilder accountsBuilder = new AccountsObjectBuilder();
        director.accept(accountsBuilder);
        return jsonBuilder -> {
          accountsBuilder.build(jsonBuilder);
        };
    }));
  }

  public void setAccounts(final List<Consumer<AccountsObjectBuilder>> directors) {
    setAccounts(directors.stream());
  }

  public void clearAccounts() {
    schemaObjectBuilder.clearField(AdapterSdkSchema.ACCOUNTS);
  }

  public void setAddressBcc(final String... values) {
    schemaObjectBuilder.setStringFieldValue(AdapterSdkSchema.ADDRESS_BCC, values);
  }

  public void setAddressBcc(final List<String> values) {
    schemaObjectBuilder.setStringFieldValue(AdapterSdkSchema.ADDRESS_BCC, values);
  }

  public void addAddressBcc(final String value) {
    schemaObjectBuilder.addStringFieldValue(AdapterSdkSchema.ADDRESS_BCC, value);
  }

  public void setAddressBcc(final String value) {
    schemaObjectBuilder.setStringFieldValue(AdapterSdkSchema.ADDRESS_BCC, value);
  }

  public void clearAddressBcc() {
    schemaObjectBuilder.clearField(AdapterSdkSchema.ADDRESS_BCC);
  }

  public void setAddressCc(final String... values) {
    schemaObjectBuilder.setStringFieldValue(AdapterSdkSchema.ADDRESS_CC, values);
  }

  public void setAddressCc(final List<String> values) {
    schemaObjectBuilder.setStringFieldValue(AdapterSdkSchema.ADDRESS_CC, values);
  }

  public void addAddressCc(final String value) {
    schemaObjectBuilder.addStringFieldValue(AdapterSdkSchema.ADDRESS_CC, value);
  }

  public void setAddressCc(final String value) {
    schemaObjectBuilder.setStringFieldValue(AdapterSdkSchema.ADDRESS_CC, value);
  }

  public void clearAddressCc() {
    schemaObjectBuilder.clearField(AdapterSdkSchema.ADDRESS_CC);
  }

  public void setAddressDisplayBcc(final String... values) {
    schemaObjectBuilder.setStringFieldValue(AdapterSdkSchema.ADDRESS_DISPLAY_BCC, values);
  }

  public void setAddressDisplayBcc(final List<String> values) {
    schemaObjectBuilder.setStringFieldValue(AdapterSdkSchema.ADDRESS_DISPLAY_BCC, values);
  }

  public void addAddressDisplayBcc(final String value) {
    schemaObjectBuilder.addStringFieldValue(AdapterSdkSchema.ADDRESS_DISPLAY_BCC, value);
  }

  public void setAddressDisplayBcc(final String value) {
    schemaObjectBuilder.setStringFieldValue(AdapterSdkSchema.ADDRESS_DISPLAY_BCC, value);
  }

  public void clearAddressDisplayBcc() {
    schemaObjectBuilder.clearField(AdapterSdkSchema.ADDRESS_DISPLAY_BCC);
  }

  public void setAddressDisplayCc(final String... values) {
    schemaObjectBuilder.setStringFieldValue(AdapterSdkSchema.ADDRESS_DISPLAY_CC, values);
  }

  public void setAddressDisplayCc(final List<String> values) {
    schemaObjectBuilder.setStringFieldValue(AdapterSdkSchema.ADDRESS_DISPLAY_CC, values);
  }

  public void addAddressDisplayCc(final String value) {
    schemaObjectBuilder.addStringFieldValue(AdapterSdkSchema.ADDRESS_DISPLAY_CC, value);
  }

  public void setAddressDisplayCc(final String value) {
    schemaObjectBuilder.setStringFieldValue(AdapterSdkSchema.ADDRESS_DISPLAY_CC, value);
  }

  public void clearAddressDisplayCc() {
    schemaObjectBuilder.clearField(AdapterSdkSchema.ADDRESS_DISPLAY_CC);
  }

  public void setAddressDisplayFrom(final String value) {
    schemaObjectBuilder.setStringFieldValue(AdapterSdkSchema.ADDRESS_DISPLAY_FROM, value);
  }

  public void clearAddressDisplayFrom() {
    schemaObjectBuilder.clearField(AdapterSdkSchema.ADDRESS_DISPLAY_FROM);
  }

  public void setAddressDisplayTo(final String... values) {
    schemaObjectBuilder.setStringFieldValue(AdapterSdkSchema.ADDRESS_DISPLAY_TO, values);
  }

  public void setAddressDisplayTo(final List<String> values) {
    schemaObjectBuilder.setStringFieldValue(AdapterSdkSchema.ADDRESS_DISPLAY_TO, values);
  }

  public void addAddressDisplayTo(final String value) {
    schemaObjectBuilder.addStringFieldValue(AdapterSdkSchema.ADDRESS_DISPLAY_TO, value);
  }

  public void setAddressDisplayTo(final String value) {
    schemaObjectBuilder.setStringFieldValue(AdapterSdkSchema.ADDRESS_DISPLAY_TO, value);
  }

  public void clearAddressDisplayTo() {
    schemaObjectBuilder.clearField(AdapterSdkSchema.ADDRESS_DISPLAY_TO);
  }

  public void setAddressFrom(final String value) {
    schemaObjectBuilder.setStringFieldValue(AdapterSdkSchema.ADDRESS_FROM, value);
  }

  public void clearAddressFrom() {
    schemaObjectBuilder.clearField(AdapterSdkSchema.ADDRESS_FROM);
  }

  public void setAddressTo(final String... values) {
    schemaObjectBuilder.setStringFieldValue(AdapterSdkSchema.ADDRESS_TO, values);
  }

  public void setAddressTo(final List<String> values) {
    schemaObjectBuilder.setStringFieldValue(AdapterSdkSchema.ADDRESS_TO, values);
  }

  public void addAddressTo(final String value) {
    schemaObjectBuilder.addStringFieldValue(AdapterSdkSchema.ADDRESS_TO, value);
  }

  public void setAddressTo(final String value) {
    schemaObjectBuilder.setStringFieldValue(AdapterSdkSchema.ADDRESS_TO, value);
  }

  public void clearAddressTo() {
    schemaObjectBuilder.clearField(AdapterSdkSchema.ADDRESS_TO);
  }

  public void setCc(final String value) {
    schemaObjectBuilder.setStringFieldValue(AdapterSdkSchema.CC, value);
  }

  public void clearCc() {
    schemaObjectBuilder.clearField(AdapterSdkSchema.CC);
  }

  public void setColumns(final Consumer<ColumnsObjectBuilder> director) {
    final ColumnsObjectBuilder columnsBuilder = new ColumnsObjectBuilder();
    director.accept(columnsBuilder);
    schemaObjectBuilder.setJsonFieldValue(
      AdapterSdkSchema.COLUMNS,
      jsonBuilder -> {
        columnsBuilder.build(jsonBuilder);
    }
    );
  }

  public void setColumns(final Stream<Consumer<ColumnsObjectBuilder>> directors) {
    schemaObjectBuilder.setJsonFieldValue(
      AdapterSdkSchema.COLUMNS,
      directors.<Consumer<JsonBuilder>>map(director -> {
        final ColumnsObjectBuilder columnsBuilder = new ColumnsObjectBuilder();
        director.accept(columnsBuilder);
        return jsonBuilder -> {
          columnsBuilder.build(jsonBuilder);
        };
    }));
  }

  public void setColumns(final List<Consumer<ColumnsObjectBuilder>> directors) {
    setColumns(directors.stream());
  }

  public void clearColumns() {
    schemaObjectBuilder.clearField(AdapterSdkSchema.COLUMNS);
  }

  public void setColumnCount(final int value) {
    schemaObjectBuilder.setIntegerFieldValue(AdapterSdkSchema.COLUMN_COUNT, value);
  }

  public void clearColumnCount() {
    schemaObjectBuilder.clearField(AdapterSdkSchema.COLUMN_COUNT);
  }

  public void setContentPrimary(final String value) {
    schemaObjectBuilder.setStringFieldValue(AdapterSdkSchema.CONTENT_PRIMARY, value);
  }

  public void clearContentPrimary() {
    schemaObjectBuilder.clearField(AdapterSdkSchema.CONTENT_PRIMARY);
  }

  public void setCreatedBy(final String... values) {
    schemaObjectBuilder.setStringFieldValue(AdapterSdkSchema.CREATED_BY, values);
  }

  public void setCreatedBy(final List<String> values) {
    schemaObjectBuilder.setStringFieldValue(AdapterSdkSchema.CREATED_BY, values);
  }

  public void addCreatedBy(final String value) {
    schemaObjectBuilder.addStringFieldValue(AdapterSdkSchema.CREATED_BY, value);
  }

  public void setCreatedBy(final String value) {
    schemaObjectBuilder.setStringFieldValue(AdapterSdkSchema.CREATED_BY, value);
  }

  public void clearCreatedBy() {
    schemaObjectBuilder.clearField(AdapterSdkSchema.CREATED_BY);
  }

  public void setDateArchived(final Instant value) {
    schemaObjectBuilder.setInstantFieldValue(AdapterSdkSchema.DATE_ARCHIVED, value);
  }

  public void clearDateArchived() {
    schemaObjectBuilder.clearField(AdapterSdkSchema.DATE_ARCHIVED);
  }

  public void setDateCreated(final Instant value) {
    schemaObjectBuilder.setInstantFieldValue(AdapterSdkSchema.DATE_CREATED, value);
  }

  public void clearDateCreated() {
    schemaObjectBuilder.clearField(AdapterSdkSchema.DATE_CREATED);
  }

  public void setDateLastAccessed(final Instant value) {
    schemaObjectBuilder.setInstantFieldValue(AdapterSdkSchema.DATE_LAST_ACCESSED, value);
  }

  public void clearDateLastAccessed() {
    schemaObjectBuilder.clearField(AdapterSdkSchema.DATE_LAST_ACCESSED);
  }

  public void setDateModified(final Instant value) {
    schemaObjectBuilder.setInstantFieldValue(AdapterSdkSchema.DATE_MODIFIED, value);
  }

  public void clearDateModified() {
    schemaObjectBuilder.clearField(AdapterSdkSchema.DATE_MODIFIED);
  }

  public void setDatePosted(final Instant value) {
    schemaObjectBuilder.setInstantFieldValue(AdapterSdkSchema.DATE_POSTED, value);
  }

  public void clearDatePosted() {
    schemaObjectBuilder.clearField(AdapterSdkSchema.DATE_POSTED);
  }

  public void setDirection(final String value) {
    schemaObjectBuilder.setStringFieldValue(AdapterSdkSchema.DIRECTION, value);
  }

  public void clearDirection() {
    schemaObjectBuilder.clearField(AdapterSdkSchema.DIRECTION);
  }

  public void setExtractionIndex(final String value) {
    schemaObjectBuilder.setStringFieldValue(AdapterSdkSchema.EXTRACTION_INDEX, value);
  }

  public void clearExtractionIndex() {
    schemaObjectBuilder.clearField(AdapterSdkSchema.EXTRACTION_INDEX);
  }

  public void setExtractionType(final String value) {
    schemaObjectBuilder.setStringFieldValue(AdapterSdkSchema.EXTRACTION_TYPE, value);
  }

  public void clearExtractionType() {
    schemaObjectBuilder.clearField(AdapterSdkSchema.EXTRACTION_TYPE);
  }

  public void setFamilyAddressBcc(final String... values) {
    schemaObjectBuilder.setStringFieldValue(AdapterSdkSchema.FAMILY_ADDRESS_BCC, values);
  }

  public void setFamilyAddressBcc(final List<String> values) {
    schemaObjectBuilder.setStringFieldValue(AdapterSdkSchema.FAMILY_ADDRESS_BCC, values);
  }

  public void addFamilyAddressBcc(final String value) {
    schemaObjectBuilder.addStringFieldValue(AdapterSdkSchema.FAMILY_ADDRESS_BCC, value);
  }

  public void setFamilyAddressBcc(final String value) {
    schemaObjectBuilder.setStringFieldValue(AdapterSdkSchema.FAMILY_ADDRESS_BCC, value);
  }

  public void clearFamilyAddressBcc() {
    schemaObjectBuilder.clearField(AdapterSdkSchema.FAMILY_ADDRESS_BCC);
  }

  public void setFamilyAddressCc(final String... values) {
    schemaObjectBuilder.setStringFieldValue(AdapterSdkSchema.FAMILY_ADDRESS_CC, values);
  }

  public void setFamilyAddressCc(final List<String> values) {
    schemaObjectBuilder.setStringFieldValue(AdapterSdkSchema.FAMILY_ADDRESS_CC, values);
  }

  public void addFamilyAddressCc(final String value) {
    schemaObjectBuilder.addStringFieldValue(AdapterSdkSchema.FAMILY_ADDRESS_CC, value);
  }

  public void setFamilyAddressCc(final String value) {
    schemaObjectBuilder.setStringFieldValue(AdapterSdkSchema.FAMILY_ADDRESS_CC, value);
  }

  public void clearFamilyAddressCc() {
    schemaObjectBuilder.clearField(AdapterSdkSchema.FAMILY_ADDRESS_CC);
  }

  public void setFamilyAddressDisplayBcc(final String... values) {
    schemaObjectBuilder.setStringFieldValue(AdapterSdkSchema.FAMILY_ADDRESS_DISPLAY_BCC, values);
  }

  public void setFamilyAddressDisplayBcc(final List<String> values) {
    schemaObjectBuilder.setStringFieldValue(AdapterSdkSchema.FAMILY_ADDRESS_DISPLAY_BCC, values);
  }

  public void addFamilyAddressDisplayBcc(final String value) {
    schemaObjectBuilder.addStringFieldValue(AdapterSdkSchema.FAMILY_ADDRESS_DISPLAY_BCC, value);
  }

  public void setFamilyAddressDisplayBcc(final String value) {
    schemaObjectBuilder.setStringFieldValue(AdapterSdkSchema.FAMILY_ADDRESS_DISPLAY_BCC, value);
  }

  public void clearFamilyAddressDisplayBcc() {
    schemaObjectBuilder.clearField(AdapterSdkSchema.FAMILY_ADDRESS_DISPLAY_BCC);
  }

  public void setFamilyAddressDisplayCc(final String... values) {
    schemaObjectBuilder.setStringFieldValue(AdapterSdkSchema.FAMILY_ADDRESS_DISPLAY_CC, values);
  }

  public void setFamilyAddressDisplayCc(final List<String> values) {
    schemaObjectBuilder.setStringFieldValue(AdapterSdkSchema.FAMILY_ADDRESS_DISPLAY_CC, values);
  }

  public void addFamilyAddressDisplayCc(final String value) {
    schemaObjectBuilder.addStringFieldValue(AdapterSdkSchema.FAMILY_ADDRESS_DISPLAY_CC, value);
  }

  public void setFamilyAddressDisplayCc(final String value) {
    schemaObjectBuilder.setStringFieldValue(AdapterSdkSchema.FAMILY_ADDRESS_DISPLAY_CC, value);
  }

  public void clearFamilyAddressDisplayCc() {
    schemaObjectBuilder.clearField(AdapterSdkSchema.FAMILY_ADDRESS_DISPLAY_CC);
  }

  public void setFamilyAddressDisplayFrom(final String value) {
    schemaObjectBuilder.setStringFieldValue(AdapterSdkSchema.FAMILY_ADDRESS_DISPLAY_FROM, value);
  }

  public void clearFamilyAddressDisplayFrom() {
    schemaObjectBuilder.clearField(AdapterSdkSchema.FAMILY_ADDRESS_DISPLAY_FROM);
  }

  public void setFamilyAddressDisplayTo(final String... values) {
    schemaObjectBuilder.setStringFieldValue(AdapterSdkSchema.FAMILY_ADDRESS_DISPLAY_TO, values);
  }

  public void setFamilyAddressDisplayTo(final List<String> values) {
    schemaObjectBuilder.setStringFieldValue(AdapterSdkSchema.FAMILY_ADDRESS_DISPLAY_TO, values);
  }

  public void addFamilyAddressDisplayTo(final String value) {
    schemaObjectBuilder.addStringFieldValue(AdapterSdkSchema.FAMILY_ADDRESS_DISPLAY_TO, value);
  }

  public void setFamilyAddressDisplayTo(final String value) {
    schemaObjectBuilder.setStringFieldValue(AdapterSdkSchema.FAMILY_ADDRESS_DISPLAY_TO, value);
  }

  public void clearFamilyAddressDisplayTo() {
    schemaObjectBuilder.clearField(AdapterSdkSchema.FAMILY_ADDRESS_DISPLAY_TO);
  }

  public void setFamilyAddressFrom(final String value) {
    schemaObjectBuilder.setStringFieldValue(AdapterSdkSchema.FAMILY_ADDRESS_FROM, value);
  }

  public void clearFamilyAddressFrom() {
    schemaObjectBuilder.clearField(AdapterSdkSchema.FAMILY_ADDRESS_FROM);
  }

  public void setFamilyAddressTo(final String... values) {
    schemaObjectBuilder.setStringFieldValue(AdapterSdkSchema.FAMILY_ADDRESS_TO, values);
  }

  public void setFamilyAddressTo(final List<String> values) {
    schemaObjectBuilder.setStringFieldValue(AdapterSdkSchema.FAMILY_ADDRESS_TO, values);
  }

  public void addFamilyAddressTo(final String value) {
    schemaObjectBuilder.addStringFieldValue(AdapterSdkSchema.FAMILY_ADDRESS_TO, value);
  }

  public void setFamilyAddressTo(final String value) {
    schemaObjectBuilder.setStringFieldValue(AdapterSdkSchema.FAMILY_ADDRESS_TO, value);
  }

  public void clearFamilyAddressTo() {
    schemaObjectBuilder.clearField(AdapterSdkSchema.FAMILY_ADDRESS_TO);
  }

  public void setFamilyDatePosted(final Instant value) {
    schemaObjectBuilder.setInstantFieldValue(AdapterSdkSchema.FAMILY_DATE_POSTED, value);
  }

  public void clearFamilyDatePosted() {
    schemaObjectBuilder.clearField(AdapterSdkSchema.FAMILY_DATE_POSTED);
  }

  public void setFamilyThreadTopic(final String value) {
    schemaObjectBuilder.setStringFieldValue(AdapterSdkSchema.FAMILY_THREAD_TOPIC, value);
  }

  public void clearFamilyThreadTopic() {
    schemaObjectBuilder.clearField(AdapterSdkSchema.FAMILY_THREAD_TOPIC);
  }

  public void setFamilyTitle(final String value) {
    schemaObjectBuilder.setStringFieldValue(AdapterSdkSchema.FAMILY_TITLE, value);
  }

  public void clearFamilyTitle() {
    schemaObjectBuilder.clearField(AdapterSdkSchema.FAMILY_TITLE);
  }

  public void setFileExt(final String value) {
    schemaObjectBuilder.setStringFieldValue(AdapterSdkSchema.FILE_EXT, value);
  }

  public void clearFileExt() {
    schemaObjectBuilder.clearField(AdapterSdkSchema.FILE_EXT);
  }

  public void setFileName(final String value) {
    schemaObjectBuilder.setStringFieldValue(AdapterSdkSchema.FILE_NAME, value);
    isFileNameSet = true;
  }

  public void clearFileName() {
    schemaObjectBuilder.clearField(AdapterSdkSchema.FILE_NAME);
    isFileNameSet = false;
  }

  public void setFileSize(final long value) {
    schemaObjectBuilder.setLongFieldValue(AdapterSdkSchema.FILE_SIZE, value);
  }

  public void clearFileSize() {
    schemaObjectBuilder.clearField(AdapterSdkSchema.FILE_SIZE);
  }

  public void setFilepath(final String value) {
    schemaObjectBuilder.setStringFieldValue(AdapterSdkSchema.FILEPATH, value);
  }

  public void clearFilepath() {
    schemaObjectBuilder.clearField(AdapterSdkSchema.FILEPATH);
  }

  public void setFrom(final String value) {
    schemaObjectBuilder.setStringFieldValue(AdapterSdkSchema.FROM, value);
  }

  public void clearFrom() {
    schemaObjectBuilder.clearField(AdapterSdkSchema.FROM);
  }

  public void setHasAttachments(final boolean value) {
    schemaObjectBuilder.setBooleanFieldValue(AdapterSdkSchema.HAS_ATTACHMENTS, value);
  }

  public void clearHasAttachments() {
    schemaObjectBuilder.clearField(AdapterSdkSchema.HAS_ATTACHMENTS);
  }

  public void setHash(final String value) {
    schemaObjectBuilder.setStringFieldValue(AdapterSdkSchema.HASH, value);
  }

  public void clearHash() {
    schemaObjectBuilder.clearField(AdapterSdkSchema.HASH);
  }

  public void setIsOle(final boolean value) {
    schemaObjectBuilder.setBooleanFieldValue(AdapterSdkSchema.IS_OLE, value);
  }

  public void clearIsOle() {
    schemaObjectBuilder.clearField(AdapterSdkSchema.IS_OLE);
  }

  public void setLastModifiedBy(final String value) {
    schemaObjectBuilder.setStringFieldValue(AdapterSdkSchema.LAST_MODIFIED_BY, value);
  }

  public void clearLastModifiedBy() {
    schemaObjectBuilder.clearField(AdapterSdkSchema.LAST_MODIFIED_BY);
  }

  public void setMessageId(final String... values) {
    schemaObjectBuilder.setStringFieldValue(AdapterSdkSchema.MESSAGE_ID, values);
  }

  public void setMessageId(final List<String> values) {
    schemaObjectBuilder.setStringFieldValue(AdapterSdkSchema.MESSAGE_ID, values);
  }

  public void addMessageId(final String value) {
    schemaObjectBuilder.addStringFieldValue(AdapterSdkSchema.MESSAGE_ID, value);
  }

  public void setMessageId(final String value) {
    schemaObjectBuilder.setStringFieldValue(AdapterSdkSchema.MESSAGE_ID, value);
  }

  public void clearMessageId() {
    schemaObjectBuilder.clearField(AdapterSdkSchema.MESSAGE_ID);
  }

  public void setMetadataFiles(final Consumer<MetadataFilesObjectBuilder> director) {
    schemaObjectBuilder.setFlattenedFieldValue(AdapterSdkSchema.METADATA_FILES, sBuilder-> {
        final MetadataFilesObjectBuilder metadataFilesBuilder = new MetadataFilesObjectBuilder(sBuilder);
        director.accept(metadataFilesBuilder);
        metadataFilesBuilder.validate();
    });
  }

  public void setMetadataFiles(final Stream<Consumer<MetadataFilesObjectBuilder>> directors) {
      schemaObjectBuilder.setFlattenedFieldValue(AdapterSdkSchema.METADATA_FILES,
        directors.<Consumer<SchemaObjectBuilder>>map(director -> {
        return sBuilder -> {
          final MetadataFilesObjectBuilder metadataFilesBuilder = new MetadataFilesObjectBuilder(sBuilder);
          director.accept(metadataFilesBuilder);
          metadataFilesBuilder.validate();
        };
    }));
  }

  public void setMetadataFiles(final List<Consumer<MetadataFilesObjectBuilder>> directors) {
    setMetadataFiles(directors.stream());
  }

  public void clearMetadataFiles() {
    schemaObjectBuilder.clearField(AdapterSdkSchema.METADATA_FILES);
  }

  public void setMimetype(final String value) {
    schemaObjectBuilder.setStringFieldValue(AdapterSdkSchema.MIMETYPE, value);
    isMimetypeSet = true;
  }

  public void clearMimetype() {
    schemaObjectBuilder.clearField(AdapterSdkSchema.MIMETYPE);
    isMimetypeSet = false;
  }

  public void setMipLabels(final Consumer<MipLabelsObjectBuilder> director) {
    schemaObjectBuilder.setFlattenedFieldValue(AdapterSdkSchema.MIP_LABELS, sBuilder-> {
        final MipLabelsObjectBuilder mipLabelsBuilder = new MipLabelsObjectBuilder(sBuilder);
        director.accept(mipLabelsBuilder);
        mipLabelsBuilder.validate();
    });
  }

  public void setMipLabels(final Stream<Consumer<MipLabelsObjectBuilder>> directors) {
      schemaObjectBuilder.setFlattenedFieldValue(AdapterSdkSchema.MIP_LABELS,
        directors.<Consumer<SchemaObjectBuilder>>map(director -> {
        return sBuilder -> {
          final MipLabelsObjectBuilder mipLabelsBuilder = new MipLabelsObjectBuilder(sBuilder);
          director.accept(mipLabelsBuilder);
          mipLabelsBuilder.validate();
        };
    }));
  }

  public void setMipLabels(final List<Consumer<MipLabelsObjectBuilder>> directors) {
    setMipLabels(directors.stream());
  }

  public void clearMipLabels() {
    schemaObjectBuilder.clearField(AdapterSdkSchema.MIP_LABELS);
  }

  public void setOcr(final Consumer<OcrListObjectBuilder> director) {
    schemaObjectBuilder.setFlattenedFieldValue(AdapterSdkSchema.OCR, sBuilder-> {
        final OcrListObjectBuilder ocrBuilder = new OcrListObjectBuilder(sBuilder);
        director.accept(ocrBuilder);
        ocrBuilder.validate();
    });
  }

  public void setOcr(final Stream<Consumer<OcrListObjectBuilder>> directors) {
      schemaObjectBuilder.setFlattenedFieldValue(AdapterSdkSchema.OCR,
        directors.<Consumer<SchemaObjectBuilder>>map(director -> {
        return sBuilder -> {
          final OcrListObjectBuilder ocrBuilder = new OcrListObjectBuilder(sBuilder);
          director.accept(ocrBuilder);
          ocrBuilder.validate();
        };
    }));
  }

  public void setOcr(final List<Consumer<OcrListObjectBuilder>> directors) {
    setOcr(directors.stream());
  }

  public void clearOcr() {
    schemaObjectBuilder.clearField(AdapterSdkSchema.OCR);
  }

  public void setOwnedBy(final String... values) {
    schemaObjectBuilder.setStringFieldValue(AdapterSdkSchema.OWNED_BY, values);
  }

  public void setOwnedBy(final List<String> values) {
    schemaObjectBuilder.setStringFieldValue(AdapterSdkSchema.OWNED_BY, values);
  }

  public void addOwnedBy(final String value) {
    schemaObjectBuilder.addStringFieldValue(AdapterSdkSchema.OWNED_BY, value);
  }

  public void setOwnedBy(final String value) {
    schemaObjectBuilder.setStringFieldValue(AdapterSdkSchema.OWNED_BY, value);
  }

  public void clearOwnedBy() {
    schemaObjectBuilder.clearField(AdapterSdkSchema.OWNED_BY);
  }

  public void setParentReference(final String value) {
    schemaObjectBuilder.setStringFieldValue(AdapterSdkSchema.PARENT_REFERENCE, value);
  }

  public void clearParentReference() {
    schemaObjectBuilder.clearField(AdapterSdkSchema.PARENT_REFERENCE);
  }

  public void setPriority(final long value) {
    schemaObjectBuilder.setLongFieldValue(AdapterSdkSchema.PRIORITY, value);
  }

  public void clearPriority() {
    schemaObjectBuilder.clearField(AdapterSdkSchema.PRIORITY);
  }

  public void setRepoClassification(final String... values) {
    schemaObjectBuilder.setStringFieldValue(AdapterSdkSchema.REPO_CLASSIFICATION, values);
  }

  public void setRepoClassification(final List<String> values) {
    schemaObjectBuilder.setStringFieldValue(AdapterSdkSchema.REPO_CLASSIFICATION, values);
  }

  public void addRepoClassification(final String value) {
    schemaObjectBuilder.addStringFieldValue(AdapterSdkSchema.REPO_CLASSIFICATION, value);
  }

  public void setRepoClassification(final String value) {
    schemaObjectBuilder.setStringFieldValue(AdapterSdkSchema.REPO_CLASSIFICATION, value);
  }

  public void clearRepoClassification() {
    schemaObjectBuilder.clearField(AdapterSdkSchema.REPO_CLASSIFICATION);
  }

  public void setRepoExpandednumber(final String value) {
    schemaObjectBuilder.setStringFieldValue(AdapterSdkSchema.REPO_EXPANDEDNUMBER, value);
  }

  public void clearRepoExpandednumber() {
    schemaObjectBuilder.clearField(AdapterSdkSchema.REPO_EXPANDEDNUMBER);
  }

  public void setRepoFolder(final String value) {
    schemaObjectBuilder.setStringFieldValue(AdapterSdkSchema.REPO_FOLDER, value);
  }

  public void clearRepoFolder() {
    schemaObjectBuilder.clearField(AdapterSdkSchema.REPO_FOLDER);
  }

  public void setRepoLabels(final String... values) {
    schemaObjectBuilder.setStringFieldValue(AdapterSdkSchema.REPO_LABELS, values);
  }

  public void setRepoLabels(final List<String> values) {
    schemaObjectBuilder.setStringFieldValue(AdapterSdkSchema.REPO_LABELS, values);
  }

  public void addRepoLabels(final String value) {
    schemaObjectBuilder.addStringFieldValue(AdapterSdkSchema.REPO_LABELS, value);
  }

  public void setRepoLabels(final String value) {
    schemaObjectBuilder.setStringFieldValue(AdapterSdkSchema.REPO_LABELS, value);
  }

  public void clearRepoLabels() {
    schemaObjectBuilder.clearField(AdapterSdkSchema.REPO_LABELS);
  }

  public void setRepoNotes(final String value) {
    schemaObjectBuilder.setStringFieldValue(AdapterSdkSchema.REPO_NOTES, value);
  }

  public void clearRepoNotes() {
    schemaObjectBuilder.clearField(AdapterSdkSchema.REPO_NOTES);
  }

  public void setRepoRecordnumber(final String value) {
    schemaObjectBuilder.setStringFieldValue(AdapterSdkSchema.REPO_RECORDNUMBER, value);
  }

  public void clearRepoRecordnumber() {
    schemaObjectBuilder.clearField(AdapterSdkSchema.REPO_RECORDNUMBER);
  }

  public void setRepoRecordtype(final String value) {
    schemaObjectBuilder.setStringFieldValue(AdapterSdkSchema.REPO_RECORDTYPE, value);
  }

  public void clearRepoRecordtype() {
    schemaObjectBuilder.clearField(AdapterSdkSchema.REPO_RECORDTYPE);
  }

  public void setRepoUri(final long value) {
    schemaObjectBuilder.setLongFieldValue(AdapterSdkSchema.REPO_URI, value);
  }

  public void clearRepoUri() {
    schemaObjectBuilder.clearField(AdapterSdkSchema.REPO_URI);
  }

  public void setRootDateModified(final Instant value) {
    schemaObjectBuilder.setInstantFieldValue(AdapterSdkSchema.ROOT_DATE_MODIFIED, value);
  }

  public void clearRootDateModified() {
    schemaObjectBuilder.clearField(AdapterSdkSchema.ROOT_DATE_MODIFIED);
  }

  public void setRootFileExt(final String value) {
    schemaObjectBuilder.setStringFieldValue(AdapterSdkSchema.ROOT_FILE_EXT, value);
  }

  public void clearRootFileExt() {
    schemaObjectBuilder.clearField(AdapterSdkSchema.ROOT_FILE_EXT);
  }

  public void setRootFilepath(final String value) {
    schemaObjectBuilder.setStringFieldValue(AdapterSdkSchema.ROOT_FILEPATH, value);
  }

  public void clearRootFilepath() {
    schemaObjectBuilder.clearField(AdapterSdkSchema.ROOT_FILEPATH);
  }

  public void setRootFileSize(final long value) {
    schemaObjectBuilder.setLongFieldValue(AdapterSdkSchema.ROOT_FILE_SIZE, value);
  }

  public void clearRootFileSize() {
    schemaObjectBuilder.clearField(AdapterSdkSchema.ROOT_FILE_SIZE);
  }

  public void setRootRepoClassification(final String... values) {
    schemaObjectBuilder.setStringFieldValue(AdapterSdkSchema.ROOT_REPO_CLASSIFICATION, values);
  }

  public void setRootRepoClassification(final List<String> values) {
    schemaObjectBuilder.setStringFieldValue(AdapterSdkSchema.ROOT_REPO_CLASSIFICATION, values);
  }

  public void addRootRepoClassification(final String value) {
    schemaObjectBuilder.addStringFieldValue(AdapterSdkSchema.ROOT_REPO_CLASSIFICATION, value);
  }

  public void setRootRepoClassification(final String value) {
    schemaObjectBuilder.setStringFieldValue(AdapterSdkSchema.ROOT_REPO_CLASSIFICATION, value);
  }

  public void clearRootRepoClassification() {
    schemaObjectBuilder.clearField(AdapterSdkSchema.ROOT_REPO_CLASSIFICATION);
  }

  public void setRootRepoRecordtype(final String value) {
    schemaObjectBuilder.setStringFieldValue(AdapterSdkSchema.ROOT_REPO_RECORDTYPE, value);
  }

  public void clearRootRepoRecordtype() {
    schemaObjectBuilder.clearField(AdapterSdkSchema.ROOT_REPO_RECORDTYPE);
  }

  public void setRowCount(final long value) {
    schemaObjectBuilder.setLongFieldValue(AdapterSdkSchema.ROW_COUNT, value);
  }

  public void clearRowCount() {
    schemaObjectBuilder.clearField(AdapterSdkSchema.ROW_COUNT);
  }

  public void setScanReference(final String value) {
    schemaObjectBuilder.setStringFieldValue(AdapterSdkSchema.SCAN_REFERENCE, value);
  }

  public void clearScanReference() {
    schemaObjectBuilder.clearField(AdapterSdkSchema.SCAN_REFERENCE);
  }

  public void setSecurityAttributes(final Consumer<SecurityAttributesObjectBuilder> director) {
    schemaObjectBuilder.setFlattenedFieldValue(AdapterSdkSchema.SECURITY_ATTRIBUTES, sBuilder-> {
        final SecurityAttributesObjectBuilder securityAttributesBuilder = new SecurityAttributesObjectBuilder(sBuilder);
        director.accept(securityAttributesBuilder);
        securityAttributesBuilder.validate();
    });
  }

  public void clearSecurityAttributes() {
    schemaObjectBuilder.clearField(AdapterSdkSchema.SECURITY_ATTRIBUTES);
  }

  public void setSourceReference(final String value) {
    schemaObjectBuilder.setStringFieldValue(AdapterSdkSchema.SOURCE_REFERENCE, value);
  }

  public void clearSourceReference() {
    schemaObjectBuilder.clearField(AdapterSdkSchema.SOURCE_REFERENCE);
  }

  public void setTableMetadata(final Consumer<TableMetadataObjectBuilder> director) {
    final TableMetadataObjectBuilder tableMetadataBuilder = new TableMetadataObjectBuilder();
    director.accept(tableMetadataBuilder);
    schemaObjectBuilder.setJsonFieldValue(
      AdapterSdkSchema.TABLE_METADATA,
      jsonBuilder -> {
        tableMetadataBuilder.build(jsonBuilder);
    }
    );
  }

  public void clearTableMetadata() {
    schemaObjectBuilder.clearField(AdapterSdkSchema.TABLE_METADATA);
  }

  public void setTableType(final String value) {
    schemaObjectBuilder.setStringFieldValue(AdapterSdkSchema.TABLE_TYPE, value);
  }

  public void clearTableType() {
    schemaObjectBuilder.clearField(AdapterSdkSchema.TABLE_TYPE);
  }

  public void setThreadIndex(final String value) {
    schemaObjectBuilder.setStringFieldValue(AdapterSdkSchema.THREAD_INDEX, value);
  }

  public void clearThreadIndex() {
    schemaObjectBuilder.clearField(AdapterSdkSchema.THREAD_INDEX);
  }

  public void setThreadReplyTo(final String value) {
    schemaObjectBuilder.setStringFieldValue(AdapterSdkSchema.THREAD_REPLY_TO, value);
  }

  public void clearThreadReplyTo() {
    schemaObjectBuilder.clearField(AdapterSdkSchema.THREAD_REPLY_TO);
  }

  public void setThreadTopic(final String value) {
    schemaObjectBuilder.setStringFieldValue(AdapterSdkSchema.THREAD_TOPIC, value);
  }

  public void clearThreadTopic() {
    schemaObjectBuilder.clearField(AdapterSdkSchema.THREAD_TOPIC);
  }

  public void setTitle(final String value) {
    schemaObjectBuilder.setStringFieldValue(AdapterSdkSchema.TITLE, value);
    isTitleSet = true;
  }

  public void clearTitle() {
    schemaObjectBuilder.clearField(AdapterSdkSchema.TITLE);
    isTitleSet = false;
  }

  public void setTo(final String value) {
    schemaObjectBuilder.setStringFieldValue(AdapterSdkSchema.TO, value);
  }

  public void clearTo() {
    schemaObjectBuilder.clearField(AdapterSdkSchema.TO);
  }

  public void setUniqueId(final String value) {
    schemaObjectBuilder.setStringFieldValue(AdapterSdkSchema.UNIQUE_ID, value);
  }

  public void clearUniqueId() {
    schemaObjectBuilder.clearField(AdapterSdkSchema.UNIQUE_ID);
  }

  public void setUniqueVersionId(final String value) {
    schemaObjectBuilder.setStringFieldValue(AdapterSdkSchema.UNIQUE_VERSION_ID, value);
  }

  public void clearUniqueVersionId() {
    schemaObjectBuilder.clearField(AdapterSdkSchema.UNIQUE_VERSION_ID);
  }

  public void setUrlPath(final String value) {
    schemaObjectBuilder.setStringFieldValue(AdapterSdkSchema.URL_PATH, value);
  }

  public void clearUrlPath() {
    schemaObjectBuilder.clearField(AdapterSdkSchema.URL_PATH);
  }

  public void setUrlPathIds(final String value) {
    schemaObjectBuilder.setStringFieldValue(AdapterSdkSchema.URL_PATH_IDS, value);
  }

  public void clearUrlPathIds() {
    schemaObjectBuilder.clearField(AdapterSdkSchema.URL_PATH_IDS);
  }

  public void validate() {
    if (!isFileNameSet) {
      throw new IllegalArgumentException("Mandatory field 'AdapterSdkSchema.FILE_NAME' is not set");
    }
    if (!isMimetypeSet) {
      throw new IllegalArgumentException("Mandatory field 'AdapterSdkSchema.MIMETYPE' is not set");
    }
    if (!isTitleSet) {
      throw new IllegalArgumentException("Mandatory field 'AdapterSdkSchema.TITLE' is not set");
    }
  }

  public static final class AccountsObjectBuilder {
    private String displayName;

    private List<String> handles;

    private String identifier;

    private String identifierType;

    private Boolean sender;

    private AccountsObjectBuilder() {
    }

    public void setDisplayName(final String value) {
      this.displayName = value;
    }

    public void clearDisplayName() {
      displayName = null;
    }

    public void setHandles(final String... values) {
      this.handles = Arrays.asList(values);
    }

    public void setHandles(final List<String> values) {
      this.handles = values;
    }

    public void addHandles(final String value) {
      if (handles == null) {
        this.handles = new ArrayList<String>();
      }
      this.handles.add(value);
    }

    public void setHandles(final String value) {
      this.handles = new ArrayList<String>();
      this.handles.add(value);
    }

    public void clearHandles() {
      handles = null;
    }

    public void setIdentifier(final String value) {
      this.identifier = value;
    }

    public void clearIdentifier() {
      identifier = null;
    }

    public void setIdentifierType(final String value) {
      this.identifierType = value;
    }

    public void clearIdentifierType() {
      identifierType = null;
    }

    public void setSender(final boolean value) {
      this.sender = value;
    }

    public void clearSender() {
      sender = null;
    }

    private void build(final JsonBuilder jsonBuilder) {
      jsonBuilder.writeStartObject();
      if (displayName != null) {
        jsonBuilder.writeFieldName(AdapterSdkSchema.ACCOUNTS.DISPLAY_NAME.getFieldName());
        jsonBuilder.writeString(displayName);
      }
      if (handles != null) {
        jsonBuilder.writeFieldName(AdapterSdkSchema.ACCOUNTS.HANDLES.getFieldName());
        jsonBuilder.writeStartArray();
        for(final String value : handles) {
          jsonBuilder.writeString(value);
        }
        jsonBuilder.writeEndArray();
      }
      if (identifier != null) {
        jsonBuilder.writeFieldName(AdapterSdkSchema.ACCOUNTS.IDENTIFIER.getFieldName());
        jsonBuilder.writeString(identifier);
      }
      if (identifierType != null) {
        jsonBuilder.writeFieldName(AdapterSdkSchema.ACCOUNTS.IDENTIFIER_TYPE.getFieldName());
        jsonBuilder.writeString(identifierType);
      }
      if (sender != null) {
        jsonBuilder.writeFieldName(AdapterSdkSchema.ACCOUNTS.SENDER.getFieldName());
        jsonBuilder.writeBoolean(sender);
      }
      jsonBuilder.writeEndObject();
    }
  }

  public static final class ColumnsObjectBuilder {
    private List<GrammarMatchesObjectBuilder> grammarMatches;

    private String name;

    private String reviewedBy;

    private String reviewerComments;

    private String selectedGrammarRule;

    private String status;

    private String type;

    private ColumnsObjectBuilder() {
    }

    public void setGrammarMatches(final Consumer<GrammarMatchesObjectBuilder> director) {
      final GrammarMatchesObjectBuilder grammarMatchesBuilder = new GrammarMatchesObjectBuilder();
      director.accept(grammarMatchesBuilder);
      grammarMatches = new ArrayList<>();
      grammarMatches.add(grammarMatchesBuilder);
    }

    public void setGrammarMatches(final Stream<Consumer<GrammarMatchesObjectBuilder>> directors) {
      grammarMatches = directors.map(director -> {
        final GrammarMatchesObjectBuilder grammarMatchesBuilder = new GrammarMatchesObjectBuilder();
        director.accept(grammarMatchesBuilder);
        return grammarMatchesBuilder;
      }).collect(Collectors.toList());
    }

    public void setGrammarMatches(final List<Consumer<GrammarMatchesObjectBuilder>> directors) {
      setGrammarMatches(directors.stream());
    }

    public void clearGrammarMatches() {
      grammarMatches = null;
    }

    public void setName(final String value) {
      this.name = value;
    }

    public void clearName() {
      name = null;
    }

    public void setReviewedBy(final String value) {
      this.reviewedBy = value;
    }

    public void clearReviewedBy() {
      reviewedBy = null;
    }

    public void setReviewerComments(final String value) {
      this.reviewerComments = value;
    }

    public void clearReviewerComments() {
      reviewerComments = null;
    }

    public void setSelectedGrammarRule(final String value) {
      this.selectedGrammarRule = value;
    }

    public void clearSelectedGrammarRule() {
      selectedGrammarRule = null;
    }

    public void setStatus(final String value) {
      this.status = value;
    }

    public void clearStatus() {
      status = null;
    }

    public void setType(final String value) {
      this.type = value;
    }

    public void clearType() {
      type = null;
    }

    private void build(final JsonBuilder jsonBuilder) {
      jsonBuilder.writeStartObject();
      if (grammarMatches != null) {
        jsonBuilder.writeFieldName(AdapterSdkSchema.COLUMNS.GRAMMAR_MATCHES.getFieldName());
        jsonBuilder.writeStartArray();
        for(final GrammarMatchesObjectBuilder value : grammarMatches) {
          value.build(jsonBuilder);
        }
        jsonBuilder.writeEndArray();
      }
      if (name != null) {
        jsonBuilder.writeFieldName(AdapterSdkSchema.COLUMNS.NAME.getFieldName());
        jsonBuilder.writeString(name);
      }
      if (reviewedBy != null) {
        jsonBuilder.writeFieldName(AdapterSdkSchema.COLUMNS.REVIEWED_BY.getFieldName());
        jsonBuilder.writeString(reviewedBy);
      }
      if (reviewerComments != null) {
        jsonBuilder.writeFieldName(AdapterSdkSchema.COLUMNS.REVIEWER_COMMENTS.getFieldName());
        jsonBuilder.writeString(reviewerComments);
      }
      if (selectedGrammarRule != null) {
        jsonBuilder.writeFieldName(AdapterSdkSchema.COLUMNS.SELECTED_GRAMMAR_RULE.getFieldName());
        jsonBuilder.writeString(selectedGrammarRule);
      }
      if (status != null) {
        jsonBuilder.writeFieldName(AdapterSdkSchema.COLUMNS.STATUS.getFieldName());
        jsonBuilder.writeString(status);
      }
      if (type != null) {
        jsonBuilder.writeFieldName(AdapterSdkSchema.COLUMNS.TYPE.getFieldName());
        jsonBuilder.writeString(type);
      }
      jsonBuilder.writeEndObject();
    }

    public static final class GrammarMatchesObjectBuilder {
      private List<String> rules;

      private Integer weight;

      private GrammarMatchesObjectBuilder() {
      }

      public void setRules(final String... values) {
        this.rules = Arrays.asList(values);
      }

      public void setRules(final List<String> values) {
        this.rules = values;
      }

      public void addRules(final String value) {
        if (rules == null) {
          this.rules = new ArrayList<String>();
        }
        this.rules.add(value);
      }

      public void setRules(final String value) {
        this.rules = new ArrayList<String>();
        this.rules.add(value);
      }

      public void clearRules() {
        rules = null;
      }

      public void setWeight(final int value) {
        this.weight = value;
      }

      public void clearWeight() {
        weight = null;
      }

      private void build(final JsonBuilder jsonBuilder) {
        jsonBuilder.writeStartObject();
        if (rules != null) {
          jsonBuilder.writeFieldName(AdapterSdkSchema.COLUMNS.GRAMMAR_MATCHES.RULES.getFieldName());
          jsonBuilder.writeStartArray();
          for(final String value : rules) {
            jsonBuilder.writeString(value);
          }
          jsonBuilder.writeEndArray();
        }
        if (weight != null) {
          jsonBuilder.writeFieldName(AdapterSdkSchema.COLUMNS.GRAMMAR_MATCHES.WEIGHT.getFieldName());
          jsonBuilder.writeInteger(weight);
        }
        jsonBuilder.writeEndObject();
      }
    }
  }

  public static final class MetadataFilesObjectBuilder {
    private final SchemaObjectBuilder schemaObjectBuilder;

    private boolean isContentSet;

    private boolean isExtensionSet;

    private MetadataFilesObjectBuilder(final SchemaObjectBuilder schemaObjectBuilder) {
      this.schemaObjectBuilder = schemaObjectBuilder;
    }

    public void setContent(final String value) {
      schemaObjectBuilder.setStringFieldValue(AdapterSdkSchema.METADATA_FILES.CONTENT, value);
      isContentSet = true;
    }

    public void clearContent() {
      schemaObjectBuilder.clearField(AdapterSdkSchema.METADATA_FILES.CONTENT);
      isContentSet = false;
    }

    public void setExtension(final String value) {
      schemaObjectBuilder.setStringFieldValue(AdapterSdkSchema.METADATA_FILES.EXTENSION, value);
      isExtensionSet = true;
    }

    public void clearExtension() {
      schemaObjectBuilder.clearField(AdapterSdkSchema.METADATA_FILES.EXTENSION);
      isExtensionSet = false;
    }

    private void validate() {
      if (!isContentSet) {
        throw new IllegalArgumentException("Mandatory field 'AdapterSdkSchema.METADATA_FILES.CONTENT' is not set");
      }
      if (!isExtensionSet) {
        throw new IllegalArgumentException("Mandatory field 'AdapterSdkSchema.METADATA_FILES.EXTENSION' is not set");
      }
    }
  }

  public static final class MipLabelsObjectBuilder {
    private final SchemaObjectBuilder schemaObjectBuilder;

    private MipLabelsObjectBuilder(final SchemaObjectBuilder schemaObjectBuilder) {
      this.schemaObjectBuilder = schemaObjectBuilder;
    }

    public void setSiteId(final String value) {
      schemaObjectBuilder.setStringFieldValue(AdapterSdkSchema.MIP_LABELS.SITE_ID, value);
    }

    public void clearSiteId() {
      schemaObjectBuilder.clearField(AdapterSdkSchema.MIP_LABELS.SITE_ID);
    }

    public void setId(final String value) {
      schemaObjectBuilder.setStringFieldValue(AdapterSdkSchema.MIP_LABELS.ID, value);
    }

    public void clearId() {
      schemaObjectBuilder.clearField(AdapterSdkSchema.MIP_LABELS.ID);
    }

    public void setSetdate(final Instant value) {
      schemaObjectBuilder.setInstantFieldValue(AdapterSdkSchema.MIP_LABELS.SETDATE, value);
    }

    public void clearSetdate() {
      schemaObjectBuilder.clearField(AdapterSdkSchema.MIP_LABELS.SETDATE);
    }

    public void setName(final String value) {
      schemaObjectBuilder.setStringFieldValue(AdapterSdkSchema.MIP_LABELS.NAME, value);
    }

    public void clearName() {
      schemaObjectBuilder.clearField(AdapterSdkSchema.MIP_LABELS.NAME);
    }

    public void setIsEncrypted(final boolean value) {
      schemaObjectBuilder.setBooleanFieldValue(AdapterSdkSchema.MIP_LABELS.IS_ENCRYPTED, value);
    }

    public void clearIsEncrypted() {
      schemaObjectBuilder.clearField(AdapterSdkSchema.MIP_LABELS.IS_ENCRYPTED);
    }

    private void validate() {
    }
  }

  public static final class OcrListObjectBuilder {
    private final SchemaObjectBuilder schemaObjectBuilder;

    private OcrListObjectBuilder(final SchemaObjectBuilder schemaObjectBuilder) {
      this.schemaObjectBuilder = schemaObjectBuilder;
    }

    public void set(final Consumer<OcrObjectBuilder> director) {
      this.schemaObjectBuilder.setFlattenedFieldValue(null, builder -> {
          final OcrObjectBuilder ocrObjectBuilder = new OcrObjectBuilder(builder);
          director.accept(ocrObjectBuilder);
          ocrObjectBuilder.validate();
      });
    }

    public void set(final Stream<Consumer<OcrObjectBuilder>> directors) {
      this.schemaObjectBuilder.setFlattenedFieldValue(null, directors.map(director -> builder -> {
          final OcrObjectBuilder ocrObjectBuilder = new OcrObjectBuilder(builder);
          director.accept(ocrObjectBuilder);
          ocrObjectBuilder.validate();
      }));
    }

    public void set(final List<Consumer<OcrObjectBuilder>> directors) {
      set(directors.stream());
    }

    public void clear() {
      this.schemaObjectBuilder.clearField(null);
    }

    private void validate() {
    }
  }

  public static final class OcrObjectBuilder {
    private final SchemaObjectBuilder schemaObjectBuilder;

    private boolean isConfidenceSet;

    private boolean isValueSet;

    private OcrObjectBuilder(final SchemaObjectBuilder schemaObjectBuilder) {
      this.schemaObjectBuilder = schemaObjectBuilder;
    }

    public void setConfidence(final int value) {
      schemaObjectBuilder.setIntegerFieldValue(AdapterSdkSchema.OCR.CONFIDENCE, value);
      isConfidenceSet = true;
    }

    public void clearConfidence() {
      schemaObjectBuilder.clearField(AdapterSdkSchema.OCR.CONFIDENCE);
      isConfidenceSet = false;
    }

    public void setName(final String value) {
      schemaObjectBuilder.setStringFieldValue(AdapterSdkSchema.OCR.NAME, value);
    }

    public void clearName() {
      schemaObjectBuilder.clearField(AdapterSdkSchema.OCR.NAME);
    }

    public void setType(final String value) {
      schemaObjectBuilder.setStringFieldValue(AdapterSdkSchema.OCR.TYPE, value);
    }

    public void clearType() {
      schemaObjectBuilder.clearField(AdapterSdkSchema.OCR.TYPE);
    }

    public void setValue(final String value) {
      schemaObjectBuilder.setStringFieldValue(AdapterSdkSchema.OCR.VALUE, value);
      isValueSet = true;
    }

    public void clearValue() {
      schemaObjectBuilder.clearField(AdapterSdkSchema.OCR.VALUE);
      isValueSet = false;
    }

    private void validate() {
      if (!isConfidenceSet) {
        throw new IllegalArgumentException("Mandatory field 'AdapterSdkSchema.OCR.CONFIDENCE' is not set");
      }
      if (!isValueSet) {
        throw new IllegalArgumentException("Mandatory field 'AdapterSdkSchema.OCR.VALUE' is not set");
      }
    }
  }

  public static final class SecurityAttributesObjectBuilder {
    private final SchemaObjectBuilder schemaObjectBuilder;

    private SecurityAttributesObjectBuilder(final SchemaObjectBuilder schemaObjectBuilder) {
      this.schemaObjectBuilder = schemaObjectBuilder;
    }

    public void setAllowedGroups(final String... values) {
      schemaObjectBuilder.setStringFieldValue(AdapterSdkSchema.SECURITY_ATTRIBUTES.ALLOWED_GROUPS, values);
    }

    public void setAllowedGroups(final List<String> values) {
      schemaObjectBuilder.setStringFieldValue(AdapterSdkSchema.SECURITY_ATTRIBUTES.ALLOWED_GROUPS, values);
    }

    public void addAllowedGroups(final String value) {
      schemaObjectBuilder.addStringFieldValue(AdapterSdkSchema.SECURITY_ATTRIBUTES.ALLOWED_GROUPS, value);
    }

    public void setAllowedGroups(final String value) {
      schemaObjectBuilder.setStringFieldValue(AdapterSdkSchema.SECURITY_ATTRIBUTES.ALLOWED_GROUPS, value);
    }

    public void clearAllowedGroups() {
      schemaObjectBuilder.clearField(AdapterSdkSchema.SECURITY_ATTRIBUTES.ALLOWED_GROUPS);
    }

    private void validate() {
    }
  }

  public static final class TableMetadataObjectBuilder {
    private Boolean isShuffled;

    private Integer sampleRowCount;

    private TableMetadataObjectBuilder() {
    }

    public void setIsShuffled(final boolean value) {
      this.isShuffled = value;
    }

    public void clearIsShuffled() {
      isShuffled = null;
    }

    public void setSampleRowCount(final int value) {
      this.sampleRowCount = value;
    }

    public void clearSampleRowCount() {
      sampleRowCount = null;
    }

    private void build(final JsonBuilder jsonBuilder) {
      jsonBuilder.writeStartObject();
      if (isShuffled == null) {
        throw new IllegalArgumentException("Mandatory field 'AdapterSdkSchema.TABLE_METADATA.IS_SHUFFLED' is not set");
      } else {
        jsonBuilder.writeFieldName(AdapterSdkSchema.TABLE_METADATA.IS_SHUFFLED.getFieldName());
        jsonBuilder.writeBoolean(isShuffled);
      }
      if (sampleRowCount == null) {
        throw new IllegalArgumentException("Mandatory field 'AdapterSdkSchema.TABLE_METADATA.SAMPLE_ROW_COUNT' is not set");
      } else {
        jsonBuilder.writeFieldName(AdapterSdkSchema.TABLE_METADATA.SAMPLE_ROW_COUNT.getFieldName());
        jsonBuilder.writeInteger(sampleRowCount);
      }
      jsonBuilder.writeEndObject();
    }
  }
}
