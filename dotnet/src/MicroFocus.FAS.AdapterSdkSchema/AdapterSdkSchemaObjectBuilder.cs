//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
// This file is auto-generated by SchemaGenerator
namespace MicroFocus.FAS.AdapterSdkSchema
{
    using System;
    using System.Collections.Generic;
    using System.Linq;

    public sealed class AdapterSdkSchemaObjectBuilder
    {
        private readonly ISchemaObjectBuilder _schemaObjectBuilder;
        private bool _isFileNameSet;
        private bool _isHashSet;
        private bool _isMimetypeSet;
        private bool _isTitleSet;
        public AdapterSdkSchemaObjectBuilder(ISchemaObjectBuilder schemaObjectBuilder)
        {
            this._schemaObjectBuilder = schemaObjectBuilder;
        }

        public void SetAccounts(Action<AccountsObjectBuilder> director)
        {
            AccountsObjectBuilder accountsBuilder = new AccountsObjectBuilder();
            director.Invoke(accountsBuilder);
            _schemaObjectBuilder.SetJsonFieldValue(AdapterSdkSchema.ACCOUNTS, jsonBuilder =>
            {
                accountsBuilder.Build(jsonBuilder);
            });
        }

        public void SetAccounts(params Action<AccountsObjectBuilder>[] directors)
        {
            SetAccounts(directors.ToList());
        }

        public void SetAccounts(IEnumerable<Action<AccountsObjectBuilder>> directors)
        {
            _schemaObjectBuilder.SetJsonFieldValue(AdapterSdkSchema.ACCOUNTS, directors.Select<Action<AccountsObjectBuilder>, Action<IJsonBuilder>>(director =>
            {
                AccountsObjectBuilder accountsBuilder = new AccountsObjectBuilder();
                director.Invoke(accountsBuilder);
                return jsonBuilder =>
                {
                    accountsBuilder.Build(jsonBuilder);
                };
            }));
        }

        public void ClearAccounts()
        {
            _schemaObjectBuilder.ClearField(AdapterSdkSchema.ACCOUNTS);
        }

        public void SetAddressBcc(params string[] values)
        {
            _schemaObjectBuilder.SetStringFieldValue(AdapterSdkSchema.ADDRESS_BCC, values);
        }

        public void SetAddressBcc(List<System.String> values)
        {
            _schemaObjectBuilder.SetStringFieldValue(AdapterSdkSchema.ADDRESS_BCC, values);
        }

        public void AddAddressBcc(string value)
        {
            _schemaObjectBuilder.AddStringFieldValue(AdapterSdkSchema.ADDRESS_BCC, value);
        }

        public void SetAddressBcc(string value)
        {
            _schemaObjectBuilder.SetStringFieldValue(AdapterSdkSchema.ADDRESS_BCC, value);
        }

        public void ClearAddressBcc()
        {
            _schemaObjectBuilder.ClearField(AdapterSdkSchema.ADDRESS_BCC);
        }

        public void SetAddressCc(params string[] values)
        {
            _schemaObjectBuilder.SetStringFieldValue(AdapterSdkSchema.ADDRESS_CC, values);
        }

        public void SetAddressCc(List<System.String> values)
        {
            _schemaObjectBuilder.SetStringFieldValue(AdapterSdkSchema.ADDRESS_CC, values);
        }

        public void AddAddressCc(string value)
        {
            _schemaObjectBuilder.AddStringFieldValue(AdapterSdkSchema.ADDRESS_CC, value);
        }

        public void SetAddressCc(string value)
        {
            _schemaObjectBuilder.SetStringFieldValue(AdapterSdkSchema.ADDRESS_CC, value);
        }

        public void ClearAddressCc()
        {
            _schemaObjectBuilder.ClearField(AdapterSdkSchema.ADDRESS_CC);
        }

        public void SetAddressDisplayBcc(params string[] values)
        {
            _schemaObjectBuilder.SetStringFieldValue(AdapterSdkSchema.ADDRESS_DISPLAY_BCC, values);
        }

        public void SetAddressDisplayBcc(List<System.String> values)
        {
            _schemaObjectBuilder.SetStringFieldValue(AdapterSdkSchema.ADDRESS_DISPLAY_BCC, values);
        }

        public void AddAddressDisplayBcc(string value)
        {
            _schemaObjectBuilder.AddStringFieldValue(AdapterSdkSchema.ADDRESS_DISPLAY_BCC, value);
        }

        public void SetAddressDisplayBcc(string value)
        {
            _schemaObjectBuilder.SetStringFieldValue(AdapterSdkSchema.ADDRESS_DISPLAY_BCC, value);
        }

        public void ClearAddressDisplayBcc()
        {
            _schemaObjectBuilder.ClearField(AdapterSdkSchema.ADDRESS_DISPLAY_BCC);
        }

        public void SetAddressDisplayCc(params string[] values)
        {
            _schemaObjectBuilder.SetStringFieldValue(AdapterSdkSchema.ADDRESS_DISPLAY_CC, values);
        }

        public void SetAddressDisplayCc(List<System.String> values)
        {
            _schemaObjectBuilder.SetStringFieldValue(AdapterSdkSchema.ADDRESS_DISPLAY_CC, values);
        }

        public void AddAddressDisplayCc(string value)
        {
            _schemaObjectBuilder.AddStringFieldValue(AdapterSdkSchema.ADDRESS_DISPLAY_CC, value);
        }

        public void SetAddressDisplayCc(string value)
        {
            _schemaObjectBuilder.SetStringFieldValue(AdapterSdkSchema.ADDRESS_DISPLAY_CC, value);
        }

        public void ClearAddressDisplayCc()
        {
            _schemaObjectBuilder.ClearField(AdapterSdkSchema.ADDRESS_DISPLAY_CC);
        }

        public void SetAddressDisplayFrom(string value)
        {
            _schemaObjectBuilder.SetStringFieldValue(AdapterSdkSchema.ADDRESS_DISPLAY_FROM, value);
        }

        public void ClearAddressDisplayFrom()
        {
            _schemaObjectBuilder.ClearField(AdapterSdkSchema.ADDRESS_DISPLAY_FROM);
        }

        public void SetAddressDisplayTo(params string[] values)
        {
            _schemaObjectBuilder.SetStringFieldValue(AdapterSdkSchema.ADDRESS_DISPLAY_TO, values);
        }

        public void SetAddressDisplayTo(List<System.String> values)
        {
            _schemaObjectBuilder.SetStringFieldValue(AdapterSdkSchema.ADDRESS_DISPLAY_TO, values);
        }

        public void AddAddressDisplayTo(string value)
        {
            _schemaObjectBuilder.AddStringFieldValue(AdapterSdkSchema.ADDRESS_DISPLAY_TO, value);
        }

        public void SetAddressDisplayTo(string value)
        {
            _schemaObjectBuilder.SetStringFieldValue(AdapterSdkSchema.ADDRESS_DISPLAY_TO, value);
        }

        public void ClearAddressDisplayTo()
        {
            _schemaObjectBuilder.ClearField(AdapterSdkSchema.ADDRESS_DISPLAY_TO);
        }

        public void SetAddressFrom(string value)
        {
            _schemaObjectBuilder.SetStringFieldValue(AdapterSdkSchema.ADDRESS_FROM, value);
        }

        public void ClearAddressFrom()
        {
            _schemaObjectBuilder.ClearField(AdapterSdkSchema.ADDRESS_FROM);
        }

        public void SetAddressTo(params string[] values)
        {
            _schemaObjectBuilder.SetStringFieldValue(AdapterSdkSchema.ADDRESS_TO, values);
        }

        public void SetAddressTo(List<System.String> values)
        {
            _schemaObjectBuilder.SetStringFieldValue(AdapterSdkSchema.ADDRESS_TO, values);
        }

        public void AddAddressTo(string value)
        {
            _schemaObjectBuilder.AddStringFieldValue(AdapterSdkSchema.ADDRESS_TO, value);
        }

        public void SetAddressTo(string value)
        {
            _schemaObjectBuilder.SetStringFieldValue(AdapterSdkSchema.ADDRESS_TO, value);
        }

        public void ClearAddressTo()
        {
            _schemaObjectBuilder.ClearField(AdapterSdkSchema.ADDRESS_TO);
        }

        public void SetCc(string value)
        {
            _schemaObjectBuilder.SetStringFieldValue(AdapterSdkSchema.CC, value);
        }

        public void ClearCc()
        {
            _schemaObjectBuilder.ClearField(AdapterSdkSchema.CC);
        }

        public void SetColumns(Action<ColumnsObjectBuilder> director)
        {
            ColumnsObjectBuilder columnsBuilder = new ColumnsObjectBuilder();
            director.Invoke(columnsBuilder);
            _schemaObjectBuilder.SetJsonFieldValue(AdapterSdkSchema.COLUMNS, jsonBuilder =>
            {
                columnsBuilder.Build(jsonBuilder);
            });
        }

        public void SetColumns(params Action<ColumnsObjectBuilder>[] directors)
        {
            SetColumns(directors.ToList());
        }

        public void SetColumns(IEnumerable<Action<ColumnsObjectBuilder>> directors)
        {
            _schemaObjectBuilder.SetJsonFieldValue(AdapterSdkSchema.COLUMNS, directors.Select<Action<ColumnsObjectBuilder>, Action<IJsonBuilder>>(director =>
            {
                ColumnsObjectBuilder columnsBuilder = new ColumnsObjectBuilder();
                director.Invoke(columnsBuilder);
                return jsonBuilder =>
                {
                    columnsBuilder.Build(jsonBuilder);
                };
            }));
        }

        public void ClearColumns()
        {
            _schemaObjectBuilder.ClearField(AdapterSdkSchema.COLUMNS);
        }

        public void SetColumnCount(int value)
        {
            _schemaObjectBuilder.SetIntegerFieldValue(AdapterSdkSchema.COLUMN_COUNT, value);
        }

        public void ClearColumnCount()
        {
            _schemaObjectBuilder.ClearField(AdapterSdkSchema.COLUMN_COUNT);
        }

        public void SetContentPrimary(string value)
        {
            _schemaObjectBuilder.SetStringFieldValue(AdapterSdkSchema.CONTENT_PRIMARY, value);
        }

        public void ClearContentPrimary()
        {
            _schemaObjectBuilder.ClearField(AdapterSdkSchema.CONTENT_PRIMARY);
        }

        public void SetDateArchived(System.DateTime value)
        {
            _schemaObjectBuilder.SetInstantFieldValue(AdapterSdkSchema.DATE_ARCHIVED, value);
        }

        public void ClearDateArchived()
        {
            _schemaObjectBuilder.ClearField(AdapterSdkSchema.DATE_ARCHIVED);
        }

        public void SetDateCreated(System.DateTime value)
        {
            _schemaObjectBuilder.SetInstantFieldValue(AdapterSdkSchema.DATE_CREATED, value);
        }

        public void ClearDateCreated()
        {
            _schemaObjectBuilder.ClearField(AdapterSdkSchema.DATE_CREATED);
        }

        public void SetDateModified(System.DateTime value)
        {
            _schemaObjectBuilder.SetInstantFieldValue(AdapterSdkSchema.DATE_MODIFIED, value);
        }

        public void ClearDateModified()
        {
            _schemaObjectBuilder.ClearField(AdapterSdkSchema.DATE_MODIFIED);
        }

        public void SetDatePosted(System.DateTime value)
        {
            _schemaObjectBuilder.SetInstantFieldValue(AdapterSdkSchema.DATE_POSTED, value);
        }

        public void ClearDatePosted()
        {
            _schemaObjectBuilder.ClearField(AdapterSdkSchema.DATE_POSTED);
        }

        public void SetDirection(string value)
        {
            _schemaObjectBuilder.SetStringFieldValue(AdapterSdkSchema.DIRECTION, value);
        }

        public void ClearDirection()
        {
            _schemaObjectBuilder.ClearField(AdapterSdkSchema.DIRECTION);
        }

        public void SetExtractionIndex(string value)
        {
            _schemaObjectBuilder.SetStringFieldValue(AdapterSdkSchema.EXTRACTION_INDEX, value);
        }

        public void ClearExtractionIndex()
        {
            _schemaObjectBuilder.ClearField(AdapterSdkSchema.EXTRACTION_INDEX);
        }

        public void SetExtractionType(string value)
        {
            _schemaObjectBuilder.SetStringFieldValue(AdapterSdkSchema.EXTRACTION_TYPE, value);
        }

        public void ClearExtractionType()
        {
            _schemaObjectBuilder.ClearField(AdapterSdkSchema.EXTRACTION_TYPE);
        }

        public void SetFamilyAddressBcc(params string[] values)
        {
            _schemaObjectBuilder.SetStringFieldValue(AdapterSdkSchema.FAMILY_ADDRESS_BCC, values);
        }

        public void SetFamilyAddressBcc(List<System.String> values)
        {
            _schemaObjectBuilder.SetStringFieldValue(AdapterSdkSchema.FAMILY_ADDRESS_BCC, values);
        }

        public void AddFamilyAddressBcc(string value)
        {
            _schemaObjectBuilder.AddStringFieldValue(AdapterSdkSchema.FAMILY_ADDRESS_BCC, value);
        }

        public void SetFamilyAddressBcc(string value)
        {
            _schemaObjectBuilder.SetStringFieldValue(AdapterSdkSchema.FAMILY_ADDRESS_BCC, value);
        }

        public void ClearFamilyAddressBcc()
        {
            _schemaObjectBuilder.ClearField(AdapterSdkSchema.FAMILY_ADDRESS_BCC);
        }

        public void SetFamilyAddressCc(params string[] values)
        {
            _schemaObjectBuilder.SetStringFieldValue(AdapterSdkSchema.FAMILY_ADDRESS_CC, values);
        }

        public void SetFamilyAddressCc(List<System.String> values)
        {
            _schemaObjectBuilder.SetStringFieldValue(AdapterSdkSchema.FAMILY_ADDRESS_CC, values);
        }

        public void AddFamilyAddressCc(string value)
        {
            _schemaObjectBuilder.AddStringFieldValue(AdapterSdkSchema.FAMILY_ADDRESS_CC, value);
        }

        public void SetFamilyAddressCc(string value)
        {
            _schemaObjectBuilder.SetStringFieldValue(AdapterSdkSchema.FAMILY_ADDRESS_CC, value);
        }

        public void ClearFamilyAddressCc()
        {
            _schemaObjectBuilder.ClearField(AdapterSdkSchema.FAMILY_ADDRESS_CC);
        }

        public void SetFamilyAddressDisplayBcc(params string[] values)
        {
            _schemaObjectBuilder.SetStringFieldValue(AdapterSdkSchema.FAMILY_ADDRESS_DISPLAY_BCC, values);
        }

        public void SetFamilyAddressDisplayBcc(List<System.String> values)
        {
            _schemaObjectBuilder.SetStringFieldValue(AdapterSdkSchema.FAMILY_ADDRESS_DISPLAY_BCC, values);
        }

        public void AddFamilyAddressDisplayBcc(string value)
        {
            _schemaObjectBuilder.AddStringFieldValue(AdapterSdkSchema.FAMILY_ADDRESS_DISPLAY_BCC, value);
        }

        public void SetFamilyAddressDisplayBcc(string value)
        {
            _schemaObjectBuilder.SetStringFieldValue(AdapterSdkSchema.FAMILY_ADDRESS_DISPLAY_BCC, value);
        }

        public void ClearFamilyAddressDisplayBcc()
        {
            _schemaObjectBuilder.ClearField(AdapterSdkSchema.FAMILY_ADDRESS_DISPLAY_BCC);
        }

        public void SetFamilyAddressDisplayCc(params string[] values)
        {
            _schemaObjectBuilder.SetStringFieldValue(AdapterSdkSchema.FAMILY_ADDRESS_DISPLAY_CC, values);
        }

        public void SetFamilyAddressDisplayCc(List<System.String> values)
        {
            _schemaObjectBuilder.SetStringFieldValue(AdapterSdkSchema.FAMILY_ADDRESS_DISPLAY_CC, values);
        }

        public void AddFamilyAddressDisplayCc(string value)
        {
            _schemaObjectBuilder.AddStringFieldValue(AdapterSdkSchema.FAMILY_ADDRESS_DISPLAY_CC, value);
        }

        public void SetFamilyAddressDisplayCc(string value)
        {
            _schemaObjectBuilder.SetStringFieldValue(AdapterSdkSchema.FAMILY_ADDRESS_DISPLAY_CC, value);
        }

        public void ClearFamilyAddressDisplayCc()
        {
            _schemaObjectBuilder.ClearField(AdapterSdkSchema.FAMILY_ADDRESS_DISPLAY_CC);
        }

        public void SetFamilyAddressDisplayFrom(string value)
        {
            _schemaObjectBuilder.SetStringFieldValue(AdapterSdkSchema.FAMILY_ADDRESS_DISPLAY_FROM, value);
        }

        public void ClearFamilyAddressDisplayFrom()
        {
            _schemaObjectBuilder.ClearField(AdapterSdkSchema.FAMILY_ADDRESS_DISPLAY_FROM);
        }

        public void SetFamilyAddressDisplayTo(params string[] values)
        {
            _schemaObjectBuilder.SetStringFieldValue(AdapterSdkSchema.FAMILY_ADDRESS_DISPLAY_TO, values);
        }

        public void SetFamilyAddressDisplayTo(List<System.String> values)
        {
            _schemaObjectBuilder.SetStringFieldValue(AdapterSdkSchema.FAMILY_ADDRESS_DISPLAY_TO, values);
        }

        public void AddFamilyAddressDisplayTo(string value)
        {
            _schemaObjectBuilder.AddStringFieldValue(AdapterSdkSchema.FAMILY_ADDRESS_DISPLAY_TO, value);
        }

        public void SetFamilyAddressDisplayTo(string value)
        {
            _schemaObjectBuilder.SetStringFieldValue(AdapterSdkSchema.FAMILY_ADDRESS_DISPLAY_TO, value);
        }

        public void ClearFamilyAddressDisplayTo()
        {
            _schemaObjectBuilder.ClearField(AdapterSdkSchema.FAMILY_ADDRESS_DISPLAY_TO);
        }

        public void SetFamilyAddressFrom(string value)
        {
            _schemaObjectBuilder.SetStringFieldValue(AdapterSdkSchema.FAMILY_ADDRESS_FROM, value);
        }

        public void ClearFamilyAddressFrom()
        {
            _schemaObjectBuilder.ClearField(AdapterSdkSchema.FAMILY_ADDRESS_FROM);
        }

        public void SetFamilyAddressTo(params string[] values)
        {
            _schemaObjectBuilder.SetStringFieldValue(AdapterSdkSchema.FAMILY_ADDRESS_TO, values);
        }

        public void SetFamilyAddressTo(List<System.String> values)
        {
            _schemaObjectBuilder.SetStringFieldValue(AdapterSdkSchema.FAMILY_ADDRESS_TO, values);
        }

        public void AddFamilyAddressTo(string value)
        {
            _schemaObjectBuilder.AddStringFieldValue(AdapterSdkSchema.FAMILY_ADDRESS_TO, value);
        }

        public void SetFamilyAddressTo(string value)
        {
            _schemaObjectBuilder.SetStringFieldValue(AdapterSdkSchema.FAMILY_ADDRESS_TO, value);
        }

        public void ClearFamilyAddressTo()
        {
            _schemaObjectBuilder.ClearField(AdapterSdkSchema.FAMILY_ADDRESS_TO);
        }

        public void SetFamilyDatePosted(System.DateTime value)
        {
            _schemaObjectBuilder.SetInstantFieldValue(AdapterSdkSchema.FAMILY_DATE_POSTED, value);
        }

        public void ClearFamilyDatePosted()
        {
            _schemaObjectBuilder.ClearField(AdapterSdkSchema.FAMILY_DATE_POSTED);
        }

        public void SetFamilyThreadTopic(string value)
        {
            _schemaObjectBuilder.SetStringFieldValue(AdapterSdkSchema.FAMILY_THREAD_TOPIC, value);
        }

        public void ClearFamilyThreadTopic()
        {
            _schemaObjectBuilder.ClearField(AdapterSdkSchema.FAMILY_THREAD_TOPIC);
        }

        public void SetFamilyTitle(string value)
        {
            _schemaObjectBuilder.SetStringFieldValue(AdapterSdkSchema.FAMILY_TITLE, value);
        }

        public void ClearFamilyTitle()
        {
            _schemaObjectBuilder.ClearField(AdapterSdkSchema.FAMILY_TITLE);
        }

        public void SetFileExt(string value)
        {
            _schemaObjectBuilder.SetStringFieldValue(AdapterSdkSchema.FILE_EXT, value);
        }

        public void ClearFileExt()
        {
            _schemaObjectBuilder.ClearField(AdapterSdkSchema.FILE_EXT);
        }

        public void SetFileName(string value)
        {
            _schemaObjectBuilder.SetStringFieldValue(AdapterSdkSchema.FILE_NAME, value);
            _isFileNameSet = true;
        }

        public void ClearFileName()
        {
            _schemaObjectBuilder.ClearField(AdapterSdkSchema.FILE_NAME);
            _isFileNameSet = false;
        }

        public void SetFileSize(long value)
        {
            _schemaObjectBuilder.SetLongFieldValue(AdapterSdkSchema.FILE_SIZE, value);
        }

        public void ClearFileSize()
        {
            _schemaObjectBuilder.ClearField(AdapterSdkSchema.FILE_SIZE);
        }

        public void SetFilepath(string value)
        {
            _schemaObjectBuilder.SetStringFieldValue(AdapterSdkSchema.FILEPATH, value);
        }

        public void ClearFilepath()
        {
            _schemaObjectBuilder.ClearField(AdapterSdkSchema.FILEPATH);
        }

        public void SetFrom(string value)
        {
            _schemaObjectBuilder.SetStringFieldValue(AdapterSdkSchema.FROM, value);
        }

        public void ClearFrom()
        {
            _schemaObjectBuilder.ClearField(AdapterSdkSchema.FROM);
        }

        public void SetHasAttachments(bool value)
        {
            _schemaObjectBuilder.SetBooleanFieldValue(AdapterSdkSchema.HAS_ATTACHMENTS, value);
        }

        public void ClearHasAttachments()
        {
            _schemaObjectBuilder.ClearField(AdapterSdkSchema.HAS_ATTACHMENTS);
        }

        public void SetHash(string value)
        {
            _schemaObjectBuilder.SetStringFieldValue(AdapterSdkSchema.HASH, value);
            _isHashSet = true;
        }

        public void ClearHash()
        {
            _schemaObjectBuilder.ClearField(AdapterSdkSchema.HASH);
            _isHashSet = false;
        }

        public void SetIsOle(bool value)
        {
            _schemaObjectBuilder.SetBooleanFieldValue(AdapterSdkSchema.IS_OLE, value);
        }

        public void ClearIsOle()
        {
            _schemaObjectBuilder.ClearField(AdapterSdkSchema.IS_OLE);
        }

        public void SetMessageId(string value)
        {
            _schemaObjectBuilder.SetStringFieldValue(AdapterSdkSchema.MESSAGE_ID, value);
        }

        public void ClearMessageId()
        {
            _schemaObjectBuilder.ClearField(AdapterSdkSchema.MESSAGE_ID);
        }

        public void SetMetadataFiles(Action<MetadataFilesObjectBuilder> director)
        {
            _schemaObjectBuilder.SetFlattenedFieldValue(AdapterSdkSchema.METADATA_FILES, sBuilder =>
            {
                MetadataFilesObjectBuilder metadataFilesBuilder = new MetadataFilesObjectBuilder(sBuilder);
                director.Invoke(metadataFilesBuilder);
                metadataFilesBuilder.Validate();
            });
        }

        public void SetMetadataFiles(params Action<MetadataFilesObjectBuilder>[] directors)
        {
            SetMetadataFiles(directors.ToList());
        }

        public void SetMetadataFiles(IEnumerable<Action<MetadataFilesObjectBuilder>> directors)
        {
            _schemaObjectBuilder.SetFlattenedFieldValue(AdapterSdkSchema.METADATA_FILES, directors.Select<Action<MetadataFilesObjectBuilder>, Action<ISchemaObjectBuilder>>(director =>
            {
                return sBuilder =>
                {
                    MetadataFilesObjectBuilder metadataFilesBuilder = new MetadataFilesObjectBuilder(sBuilder);
                    director.Invoke(metadataFilesBuilder);
                    metadataFilesBuilder.Validate();
                };
            }));
        }

        public void ClearMetadataFiles()
        {
            _schemaObjectBuilder.ClearField(AdapterSdkSchema.METADATA_FILES);
        }

        public void SetMimetype(string value)
        {
            _schemaObjectBuilder.SetStringFieldValue(AdapterSdkSchema.MIMETYPE, value);
            _isMimetypeSet = true;
        }

        public void ClearMimetype()
        {
            _schemaObjectBuilder.ClearField(AdapterSdkSchema.MIMETYPE);
            _isMimetypeSet = false;
        }

        public void SetOcr(Action<OcrListObjectBuilder> director)
        {
            _schemaObjectBuilder.SetFlattenedFieldValue(AdapterSdkSchema.OCR, sBuilder =>
            {
                OcrListObjectBuilder ocrBuilder = new OcrListObjectBuilder(sBuilder);
                director.Invoke(ocrBuilder);
                ocrBuilder.Validate();
            });
        }

        public void SetOcr(params Action<OcrListObjectBuilder>[] directors)
        {
            SetOcr(directors.ToList());
        }

        public void SetOcr(IEnumerable<Action<OcrListObjectBuilder>> directors)
        {
            _schemaObjectBuilder.SetFlattenedFieldValue(AdapterSdkSchema.OCR, directors.Select<Action<OcrListObjectBuilder>, Action<ISchemaObjectBuilder>>(director =>
            {
                return sBuilder =>
                {
                    OcrListObjectBuilder ocrBuilder = new OcrListObjectBuilder(sBuilder);
                    director.Invoke(ocrBuilder);
                    ocrBuilder.Validate();
                };
            }));
        }

        public void ClearOcr()
        {
            _schemaObjectBuilder.ClearField(AdapterSdkSchema.OCR);
        }

        public void SetParentReference(string value)
        {
            _schemaObjectBuilder.SetStringFieldValue(AdapterSdkSchema.PARENT_REFERENCE, value);
        }

        public void ClearParentReference()
        {
            _schemaObjectBuilder.ClearField(AdapterSdkSchema.PARENT_REFERENCE);
        }

        public void SetPriority(long value)
        {
            _schemaObjectBuilder.SetLongFieldValue(AdapterSdkSchema.PRIORITY, value);
        }

        public void ClearPriority()
        {
            _schemaObjectBuilder.ClearField(AdapterSdkSchema.PRIORITY);
        }

        public void SetRepoClassification(params string[] values)
        {
            _schemaObjectBuilder.SetStringFieldValue(AdapterSdkSchema.REPO_CLASSIFICATION, values);
        }

        public void SetRepoClassification(List<System.String> values)
        {
            _schemaObjectBuilder.SetStringFieldValue(AdapterSdkSchema.REPO_CLASSIFICATION, values);
        }

        public void AddRepoClassification(string value)
        {
            _schemaObjectBuilder.AddStringFieldValue(AdapterSdkSchema.REPO_CLASSIFICATION, value);
        }

        public void SetRepoClassification(string value)
        {
            _schemaObjectBuilder.SetStringFieldValue(AdapterSdkSchema.REPO_CLASSIFICATION, value);
        }

        public void ClearRepoClassification()
        {
            _schemaObjectBuilder.ClearField(AdapterSdkSchema.REPO_CLASSIFICATION);
        }

        public void SetRepoExpandednumber(string value)
        {
            _schemaObjectBuilder.SetStringFieldValue(AdapterSdkSchema.REPO_EXPANDEDNUMBER, value);
        }

        public void ClearRepoExpandednumber()
        {
            _schemaObjectBuilder.ClearField(AdapterSdkSchema.REPO_EXPANDEDNUMBER);
        }

        public void SetRepoFolder(string value)
        {
            _schemaObjectBuilder.SetStringFieldValue(AdapterSdkSchema.REPO_FOLDER, value);
        }

        public void ClearRepoFolder()
        {
            _schemaObjectBuilder.ClearField(AdapterSdkSchema.REPO_FOLDER);
        }

        public void SetRepoLabels(params string[] values)
        {
            _schemaObjectBuilder.SetStringFieldValue(AdapterSdkSchema.REPO_LABELS, values);
        }

        public void SetRepoLabels(List<System.String> values)
        {
            _schemaObjectBuilder.SetStringFieldValue(AdapterSdkSchema.REPO_LABELS, values);
        }

        public void AddRepoLabels(string value)
        {
            _schemaObjectBuilder.AddStringFieldValue(AdapterSdkSchema.REPO_LABELS, value);
        }

        public void SetRepoLabels(string value)
        {
            _schemaObjectBuilder.SetStringFieldValue(AdapterSdkSchema.REPO_LABELS, value);
        }

        public void ClearRepoLabels()
        {
            _schemaObjectBuilder.ClearField(AdapterSdkSchema.REPO_LABELS);
        }

        public void SetRepoNotes(string value)
        {
            _schemaObjectBuilder.SetStringFieldValue(AdapterSdkSchema.REPO_NOTES, value);
        }

        public void ClearRepoNotes()
        {
            _schemaObjectBuilder.ClearField(AdapterSdkSchema.REPO_NOTES);
        }

        public void SetRepoRecordnumber(string value)
        {
            _schemaObjectBuilder.SetStringFieldValue(AdapterSdkSchema.REPO_RECORDNUMBER, value);
        }

        public void ClearRepoRecordnumber()
        {
            _schemaObjectBuilder.ClearField(AdapterSdkSchema.REPO_RECORDNUMBER);
        }

        public void SetRepoRecordtype(string value)
        {
            _schemaObjectBuilder.SetStringFieldValue(AdapterSdkSchema.REPO_RECORDTYPE, value);
        }

        public void ClearRepoRecordtype()
        {
            _schemaObjectBuilder.ClearField(AdapterSdkSchema.REPO_RECORDTYPE);
        }

        public void SetRepoUri(long value)
        {
            _schemaObjectBuilder.SetLongFieldValue(AdapterSdkSchema.REPO_URI, value);
        }

        public void ClearRepoUri()
        {
            _schemaObjectBuilder.ClearField(AdapterSdkSchema.REPO_URI);
        }

        public void SetRootDateModified(System.DateTime value)
        {
            _schemaObjectBuilder.SetInstantFieldValue(AdapterSdkSchema.ROOT_DATE_MODIFIED, value);
        }

        public void ClearRootDateModified()
        {
            _schemaObjectBuilder.ClearField(AdapterSdkSchema.ROOT_DATE_MODIFIED);
        }

        public void SetRootFileExt(string value)
        {
            _schemaObjectBuilder.SetStringFieldValue(AdapterSdkSchema.ROOT_FILE_EXT, value);
        }

        public void ClearRootFileExt()
        {
            _schemaObjectBuilder.ClearField(AdapterSdkSchema.ROOT_FILE_EXT);
        }

        public void SetRootFilepath(string value)
        {
            _schemaObjectBuilder.SetStringFieldValue(AdapterSdkSchema.ROOT_FILEPATH, value);
        }

        public void ClearRootFilepath()
        {
            _schemaObjectBuilder.ClearField(AdapterSdkSchema.ROOT_FILEPATH);
        }

        public void SetRootFileSize(long value)
        {
            _schemaObjectBuilder.SetLongFieldValue(AdapterSdkSchema.ROOT_FILE_SIZE, value);
        }

        public void ClearRootFileSize()
        {
            _schemaObjectBuilder.ClearField(AdapterSdkSchema.ROOT_FILE_SIZE);
        }

        public void SetRootRepoClassification(params string[] values)
        {
            _schemaObjectBuilder.SetStringFieldValue(AdapterSdkSchema.ROOT_REPO_CLASSIFICATION, values);
        }

        public void SetRootRepoClassification(List<System.String> values)
        {
            _schemaObjectBuilder.SetStringFieldValue(AdapterSdkSchema.ROOT_REPO_CLASSIFICATION, values);
        }

        public void AddRootRepoClassification(string value)
        {
            _schemaObjectBuilder.AddStringFieldValue(AdapterSdkSchema.ROOT_REPO_CLASSIFICATION, value);
        }

        public void SetRootRepoClassification(string value)
        {
            _schemaObjectBuilder.SetStringFieldValue(AdapterSdkSchema.ROOT_REPO_CLASSIFICATION, value);
        }

        public void ClearRootRepoClassification()
        {
            _schemaObjectBuilder.ClearField(AdapterSdkSchema.ROOT_REPO_CLASSIFICATION);
        }

        public void SetRootRepoRecordtype(string value)
        {
            _schemaObjectBuilder.SetStringFieldValue(AdapterSdkSchema.ROOT_REPO_RECORDTYPE, value);
        }

        public void ClearRootRepoRecordtype()
        {
            _schemaObjectBuilder.ClearField(AdapterSdkSchema.ROOT_REPO_RECORDTYPE);
        }

        public void SetRowCount(long value)
        {
            _schemaObjectBuilder.SetLongFieldValue(AdapterSdkSchema.ROW_COUNT, value);
        }

        public void ClearRowCount()
        {
            _schemaObjectBuilder.ClearField(AdapterSdkSchema.ROW_COUNT);
        }

        public void SetScanReference(string value)
        {
            _schemaObjectBuilder.SetStringFieldValue(AdapterSdkSchema.SCAN_REFERENCE, value);
        }

        public void ClearScanReference()
        {
            _schemaObjectBuilder.ClearField(AdapterSdkSchema.SCAN_REFERENCE);
        }

        public void SetSourceReference(string value)
        {
            _schemaObjectBuilder.SetStringFieldValue(AdapterSdkSchema.SOURCE_REFERENCE, value);
        }

        public void ClearSourceReference()
        {
            _schemaObjectBuilder.ClearField(AdapterSdkSchema.SOURCE_REFERENCE);
        }

        public void SetTableType(string value)
        {
            _schemaObjectBuilder.SetStringFieldValue(AdapterSdkSchema.TABLE_TYPE, value);
        }

        public void ClearTableType()
        {
            _schemaObjectBuilder.ClearField(AdapterSdkSchema.TABLE_TYPE);
        }

        public void SetThreadIndex(string value)
        {
            _schemaObjectBuilder.SetStringFieldValue(AdapterSdkSchema.THREAD_INDEX, value);
        }

        public void ClearThreadIndex()
        {
            _schemaObjectBuilder.ClearField(AdapterSdkSchema.THREAD_INDEX);
        }

        public void SetThreadReplyTo(string value)
        {
            _schemaObjectBuilder.SetStringFieldValue(AdapterSdkSchema.THREAD_REPLY_TO, value);
        }

        public void ClearThreadReplyTo()
        {
            _schemaObjectBuilder.ClearField(AdapterSdkSchema.THREAD_REPLY_TO);
        }

        public void SetThreadTopic(string value)
        {
            _schemaObjectBuilder.SetStringFieldValue(AdapterSdkSchema.THREAD_TOPIC, value);
        }

        public void ClearThreadTopic()
        {
            _schemaObjectBuilder.ClearField(AdapterSdkSchema.THREAD_TOPIC);
        }

        public void SetTitle(string value)
        {
            _schemaObjectBuilder.SetStringFieldValue(AdapterSdkSchema.TITLE, value);
            _isTitleSet = true;
        }

        public void ClearTitle()
        {
            _schemaObjectBuilder.ClearField(AdapterSdkSchema.TITLE);
            _isTitleSet = false;
        }

        public void SetTo(string value)
        {
            _schemaObjectBuilder.SetStringFieldValue(AdapterSdkSchema.TO, value);
        }

        public void ClearTo()
        {
            _schemaObjectBuilder.ClearField(AdapterSdkSchema.TO);
        }

        public void SetUniqueId(string value)
        {
            _schemaObjectBuilder.SetStringFieldValue(AdapterSdkSchema.UNIQUE_ID, value);
        }

        public void ClearUniqueId()
        {
            _schemaObjectBuilder.ClearField(AdapterSdkSchema.UNIQUE_ID);
        }

        public void Validate()
        {
            if (!_isFileNameSet)
            {
                throw new ArgumentException("Mandatory field 'AdapterSdkSchema.FILE_NAME' is not set");
            }

            if (!_isHashSet)
            {
                throw new ArgumentException("Mandatory field 'AdapterSdkSchema.HASH' is not set");
            }

            if (!_isMimetypeSet)
            {
                throw new ArgumentException("Mandatory field 'AdapterSdkSchema.MIMETYPE' is not set");
            }

            if (!_isTitleSet)
            {
                throw new ArgumentException("Mandatory field 'AdapterSdkSchema.TITLE' is not set");
            }
        }

        public sealed class AccountsObjectBuilder
        {
            private String displayName;
            private List<String> handles;
            private String identifier;
            private String identifierType;
            private bool? sender;
            internal AccountsObjectBuilder()
            {
            }

            public void SetDisplayName(string value)
            {
                this.displayName = value;
            }

            public void ClearDisplayName()
            {
                displayName = null;
            }

            public void SetHandles(params string[] values)
            {
                this.handles = values.ToList();
            }

            public void SetHandles(List<System.String> values)
            {
                this.handles = values;
            }

            public void AddHandles(string value)
            {
                if (handles == null)
                {
                    this.handles = new List<String>();
                }

                this.handles.Add(value);
            }

            public void SetHandles(string value)
            {
                this.handles = new List<System.String>();
                this.handles.Add(value);
            }

            public void ClearHandles()
            {
                handles = null;
            }

            public void SetIdentifier(string value)
            {
                this.identifier = value;
            }

            public void ClearIdentifier()
            {
                identifier = null;
            }

            public void SetIdentifierType(string value)
            {
                this.identifierType = value;
            }

            public void ClearIdentifierType()
            {
                identifierType = null;
            }

            public void SetSender(bool value)
            {
                this.sender = value;
            }

            public void ClearSender()
            {
                sender = null;
            }

            internal void Build(IJsonBuilder jsonBuilder)
            {
                jsonBuilder.WriteStartObject();
                if (displayName != null)
                {
                    jsonBuilder.WriteFieldName(AdapterSdkSchema.ACCOUNTS.DISPLAY_NAME.FieldName);
                    jsonBuilder.WriteString(displayName);
                }

                if (handles != null)
                {
                    jsonBuilder.WriteFieldName(AdapterSdkSchema.ACCOUNTS.HANDLES.FieldName);
                    jsonBuilder.WriteStartArray();
                    foreach (String value in handles)
                    {
                        jsonBuilder.WriteString(value);
                    }

                    jsonBuilder.WriteEndArray();
                }

                if (identifier != null)
                {
                    jsonBuilder.WriteFieldName(AdapterSdkSchema.ACCOUNTS.IDENTIFIER.FieldName);
                    jsonBuilder.WriteString(identifier);
                }

                if (identifierType != null)
                {
                    jsonBuilder.WriteFieldName(AdapterSdkSchema.ACCOUNTS.IDENTIFIER_TYPE.FieldName);
                    jsonBuilder.WriteString(identifierType);
                }

                if (sender.HasValue)
                {
                    jsonBuilder.WriteFieldName(AdapterSdkSchema.ACCOUNTS.SENDER.FieldName);
                    jsonBuilder.WriteBoolean(sender.Value);
                }

                jsonBuilder.WriteEndObject();
            }
        }

        public sealed class ColumnsObjectBuilder
        {
            private List<GrammarMatchesObjectBuilder> grammarMatches;
            private String name;
            private String reviewedBy;
            private String reviewerComments;
            private String selectedGrammarRule;
            private String status;
            private String type;
            internal ColumnsObjectBuilder()
            {
            }

            public void SetGrammarMatches(Action<GrammarMatchesObjectBuilder> director)
            {
                GrammarMatchesObjectBuilder grammarMatchesBuilder = new GrammarMatchesObjectBuilder();
                director.Invoke(grammarMatchesBuilder);
                grammarMatches = new List<GrammarMatchesObjectBuilder>();
                grammarMatches.Add(grammarMatchesBuilder);
            }

            public void SetGrammarMatches(params Action<GrammarMatchesObjectBuilder>[] directors)
            {
                SetGrammarMatches(directors.ToList());
            }

            public void SetGrammarMatches(List<Action<GrammarMatchesObjectBuilder>> directors)
            {
                grammarMatches = directors.Select(director =>
                {
                    GrammarMatchesObjectBuilder grammarMatchesBuilder = new GrammarMatchesObjectBuilder();
                    director.Invoke(grammarMatchesBuilder);
                    return grammarMatchesBuilder;
                }).ToList();
            }

            public void ClearGrammarMatches()
            {
                grammarMatches = null;
            }

            public void SetName(string value)
            {
                this.name = value;
            }

            public void ClearName()
            {
                name = null;
            }

            public void SetReviewedBy(string value)
            {
                this.reviewedBy = value;
            }

            public void ClearReviewedBy()
            {
                reviewedBy = null;
            }

            public void SetReviewerComments(string value)
            {
                this.reviewerComments = value;
            }

            public void ClearReviewerComments()
            {
                reviewerComments = null;
            }

            public void SetSelectedGrammarRule(string value)
            {
                this.selectedGrammarRule = value;
            }

            public void ClearSelectedGrammarRule()
            {
                selectedGrammarRule = null;
            }

            public void SetStatus(string value)
            {
                this.status = value;
            }

            public void ClearStatus()
            {
                status = null;
            }

            public void SetType(string value)
            {
                this.type = value;
            }

            public void ClearType()
            {
                type = null;
            }

            internal void Build(IJsonBuilder jsonBuilder)
            {
                jsonBuilder.WriteStartObject();
                if (grammarMatches != null)
                {
                    jsonBuilder.WriteFieldName(AdapterSdkSchema.COLUMNS.GRAMMAR_MATCHES.FieldName);
                    jsonBuilder.WriteStartArray();
                    foreach (GrammarMatchesObjectBuilder value in grammarMatches)
                    {
                        value.Build(jsonBuilder);
                    }

                    jsonBuilder.WriteEndArray();
                }

                if (name != null)
                {
                    jsonBuilder.WriteFieldName(AdapterSdkSchema.COLUMNS.NAME.FieldName);
                    jsonBuilder.WriteString(name);
                }

                if (reviewedBy != null)
                {
                    jsonBuilder.WriteFieldName(AdapterSdkSchema.COLUMNS.REVIEWED_BY.FieldName);
                    jsonBuilder.WriteString(reviewedBy);
                }

                if (reviewerComments != null)
                {
                    jsonBuilder.WriteFieldName(AdapterSdkSchema.COLUMNS.REVIEWER_COMMENTS.FieldName);
                    jsonBuilder.WriteString(reviewerComments);
                }

                if (selectedGrammarRule != null)
                {
                    jsonBuilder.WriteFieldName(AdapterSdkSchema.COLUMNS.SELECTED_GRAMMAR_RULE.FieldName);
                    jsonBuilder.WriteString(selectedGrammarRule);
                }

                if (status != null)
                {
                    jsonBuilder.WriteFieldName(AdapterSdkSchema.COLUMNS.STATUS.FieldName);
                    jsonBuilder.WriteString(status);
                }

                if (type != null)
                {
                    jsonBuilder.WriteFieldName(AdapterSdkSchema.COLUMNS.TYPE.FieldName);
                    jsonBuilder.WriteString(type);
                }

                jsonBuilder.WriteEndObject();
            }

            public sealed class GrammarMatchesObjectBuilder
            {
                private List<String> rules;
                private int? weight;
                internal GrammarMatchesObjectBuilder()
                {
                }

                public void SetRules(params string[] values)
                {
                    this.rules = values.ToList();
                }

                public void SetRules(List<System.String> values)
                {
                    this.rules = values;
                }

                public void AddRules(string value)
                {
                    if (rules == null)
                    {
                        this.rules = new List<String>();
                    }

                    this.rules.Add(value);
                }

                public void SetRules(string value)
                {
                    this.rules = new List<System.String>();
                    this.rules.Add(value);
                }

                public void ClearRules()
                {
                    rules = null;
                }

                public void SetWeight(int value)
                {
                    this.weight = value;
                }

                public void ClearWeight()
                {
                    weight = null;
                }

                internal void Build(IJsonBuilder jsonBuilder)
                {
                    jsonBuilder.WriteStartObject();
                    if (rules != null)
                    {
                        jsonBuilder.WriteFieldName(AdapterSdkSchema.COLUMNS.GRAMMAR_MATCHES.RULES.FieldName);
                        jsonBuilder.WriteStartArray();
                        foreach (String value in rules)
                        {
                            jsonBuilder.WriteString(value);
                        }

                        jsonBuilder.WriteEndArray();
                    }

                    if (weight.HasValue)
                    {
                        jsonBuilder.WriteFieldName(AdapterSdkSchema.COLUMNS.GRAMMAR_MATCHES.WEIGHT.FieldName);
                        jsonBuilder.WriteInteger(weight.Value);
                    }

                    jsonBuilder.WriteEndObject();
                }
            }
        }

        public sealed class MetadataFilesObjectBuilder
        {
            private readonly ISchemaObjectBuilder _schemaObjectBuilder;
            private bool _isContentSet;
            private bool _isExtensionSet;
            internal MetadataFilesObjectBuilder(ISchemaObjectBuilder schemaObjectBuilder)
            {
                this._schemaObjectBuilder = schemaObjectBuilder;
            }

            public void SetContent(string value)
            {
                _schemaObjectBuilder.SetStringFieldValue(AdapterSdkSchema.METADATA_FILES.CONTENT, value);
                _isContentSet = true;
            }

            public void ClearContent()
            {
                _schemaObjectBuilder.ClearField(AdapterSdkSchema.METADATA_FILES.CONTENT);
                _isContentSet = false;
            }

            public void SetExtension(string value)
            {
                _schemaObjectBuilder.SetStringFieldValue(AdapterSdkSchema.METADATA_FILES.EXTENSION, value);
                _isExtensionSet = true;
            }

            public void ClearExtension()
            {
                _schemaObjectBuilder.ClearField(AdapterSdkSchema.METADATA_FILES.EXTENSION);
                _isExtensionSet = false;
            }

            public void Validate()
            {
                if (!_isContentSet)
                {
                    throw new ArgumentException("Mandatory field 'AdapterSdkSchema.METADATA_FILES.CONTENT' is not set");
                }

                if (!_isExtensionSet)
                {
                    throw new ArgumentException("Mandatory field 'AdapterSdkSchema.METADATA_FILES.EXTENSION' is not set");
                }
            }
        }

        public class OcrListObjectBuilder
        {
            private readonly ISchemaObjectBuilder _schemaObjectBuilder;
            internal OcrListObjectBuilder(ISchemaObjectBuilder schemaObjectBuilder)
            {
                this._schemaObjectBuilder = schemaObjectBuilder;
            }

            public void Set(Action<OcrObjectBuilder> director)
            {
                this._schemaObjectBuilder.SetFlattenedFieldValue(null, builder =>
                {
                    OcrObjectBuilder ocrObjectBuilder = new OcrObjectBuilder(builder);
                    director.Invoke(ocrObjectBuilder);
                    ocrObjectBuilder.Validate();
                });
            }

            public void Set(params Action<OcrObjectBuilder>[] directors)
            {
                Set(directors.ToList());
            }

            public void Set(IEnumerable<Action<OcrObjectBuilder>> directors)
            {
                this._schemaObjectBuilder.SetFlattenedFieldValue(null, directors.Select<Action<OcrObjectBuilder>, Action<ISchemaObjectBuilder>>(director => builder =>
                {
                    OcrObjectBuilder ocrObjectBuilder = new OcrObjectBuilder(builder);
                    director.Invoke(ocrObjectBuilder);
                    ocrObjectBuilder.Validate();
                }));
            }

            public void Clear()
            {
                this._schemaObjectBuilder.ClearField(null);
            }

            internal void Validate()
            {
            }
        }

        public sealed class OcrObjectBuilder
        {
            private readonly ISchemaObjectBuilder _schemaObjectBuilder;
            private bool _isConfidenceSet;
            private bool _isValueSet;
            internal OcrObjectBuilder(ISchemaObjectBuilder schemaObjectBuilder)
            {
                this._schemaObjectBuilder = schemaObjectBuilder;
            }

            public void SetConfidence(int value)
            {
                _schemaObjectBuilder.SetIntegerFieldValue(AdapterSdkSchema.OCR.CONFIDENCE, value);
                _isConfidenceSet = true;
            }

            public void ClearConfidence()
            {
                _schemaObjectBuilder.ClearField(AdapterSdkSchema.OCR.CONFIDENCE);
                _isConfidenceSet = false;
            }

            public void SetName(string value)
            {
                _schemaObjectBuilder.SetStringFieldValue(AdapterSdkSchema.OCR.NAME, value);
            }

            public void ClearName()
            {
                _schemaObjectBuilder.ClearField(AdapterSdkSchema.OCR.NAME);
            }

            public void SetType(string value)
            {
                _schemaObjectBuilder.SetStringFieldValue(AdapterSdkSchema.OCR.TYPE, value);
            }

            public void ClearType()
            {
                _schemaObjectBuilder.ClearField(AdapterSdkSchema.OCR.TYPE);
            }

            public void SetValue(string value)
            {
                _schemaObjectBuilder.SetStringFieldValue(AdapterSdkSchema.OCR.VALUE, value);
                _isValueSet = true;
            }

            public void ClearValue()
            {
                _schemaObjectBuilder.ClearField(AdapterSdkSchema.OCR.VALUE);
                _isValueSet = false;
            }

            public void Validate()
            {
                if (!_isConfidenceSet)
                {
                    throw new ArgumentException("Mandatory field 'AdapterSdkSchema.OCR.CONFIDENCE' is not set");
                }

                if (!_isValueSet)
                {
                    throw new ArgumentException("Mandatory field 'AdapterSdkSchema.OCR.VALUE' is not set");
                }
            }
        }
    }
}